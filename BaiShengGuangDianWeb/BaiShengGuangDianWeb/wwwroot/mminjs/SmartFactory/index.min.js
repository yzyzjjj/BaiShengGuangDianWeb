function pageReady(){$("#personNavLi").one("click",getPersonList);$("#deviceNavLi").one("click",getDeviceList);$("#flowNavLi").one("click",getProcessCodeList);$("#processSetNavLi").one("click",getProcessOpList);$("#planNavLi").one("click",getPlanList);$("#workOrderNavLi").one("click",getWorkOrderList);$("#taskOrderNavLi").one("click",getTaskOrderList);$("#flowCardNavLi").on("click",()=>{$("#sendCardSTime,#sendCardETime").val(getDate()).datepicker("update");const n=myPromise(5090),t=myPromise(5040),i=myPromise(5060);Promise.all([n,t,i]).then(n=>{const t='<option value="0">所有<\/option>';$("#flowCardTaskOrderSelect").html(`${t}${setOptions(n[0],"TaskOrder")}`);$("#flowCardProcessCodeSelect").html(`${t}${setOptions(n[1],"Code")}`);$("#flowCardPlanSelect").html(`${t}${setOptions(n[2],"Product")}`);getFlowCardList()})});$("#addProcessCodeBody").on("click",".upTr",function(){const n=$(this).parents("tr"),t=n.prev();t.before(n);setAddProcessOpList()});$("#addProcessCodeBody").on("click",".delBtn",function(){$(this).parents("tr").remove();setAddProcessOpList()});$("#planProcessCodeList").on("change",".process-code-select",function(){const r=$(this).val(),n=_planProcessCodeInfo[r];$(this).siblings(".process-code-category").text(`类型：${n.Category}`);const u=n.List.split(","),f=n.Processes.split(","),e=u.map((t,i)=>({ProcessId:t,Process:f[i],ProcessNumber:0,ProcessCodeId:n.Id})),t=_tablesConfig(!1,e),i=_tableSet();t.columns=t.columns.concat([{data:"Process",title:"流程"},{data:null,title:"可否返工",render:i.isRework},{data:"ProcessNumber",title:"单台加工数量",render:i.addInput.bind(null,"processNumber","auto")},{data:null,title:"工艺数据",render:i.setBtn}]);$(this).closest(".temp").find(".process-table").DataTable(t);disabledProcessCode()});$("#planProcessCodeList").on("click",".browse-btn",function(){myPromise(5040).then(n=>{const t=_tablesConfig(!0,n,0),i=_tableSet();t.columns=t.columns.concat([{data:"Code",title:"编号"},{data:"Category",title:"类型"},{data:"Processes",title:"流程详情",render:i.processDetail},{data:"Remark",title:"备注"}]);$("#browseProcessCodeList").DataTable(t);$("#browseProcessCodeModel").modal("show")})});$("#planProcessCodeList").on("click",".del-btn",function(){$(this).closest(".temp").remove();disabledProcessCode();$("#addPlanProcessList").prop("disabled",!1)});$("#planProcessCodeList").on("click",".set-btn",function(){const i=this.ProcessData?this.ProcessData.map(n=>({addPressM:n[0],addPressS:n[1],workM:n[2],workS:n[3],setPress:n[4],rotate:n[5]})):[],t=_tablesConfig(!1,i),n=_tableSet();t.columns=t.columns.concat([{data:"addPressM",title:"加压时间（M）",render:n.addInput.bind(null,"addPressM","auto")},{data:"addPressS",title:"加压时间（S）",render:n.addInput.bind(null,"addPressS","auto")},{data:"workM",title:"工序时间（M）",render:n.addInput.bind(null,"workM","auto")},{data:"workS",title:"工序时间（S）",render:n.addInput.bind(null,"workS","auto")},{data:"setPress",title:"设定压力（Kg）",render:n.addInput.bind(null,"setPress","auto")},{data:"rotate",title:"下盘速度（rpm）",render:n.addInput.bind(null,"rotate","auto")},{data:null,title:"删除",render:n.delBtn}]);$("#setCraftList").DataTable(t);$("#setCraftModel").modal("show");$("#addCraftBtn").off("click").on("click",()=>{const n=getDataTableRow("#setCraftList");if(!n.length){layer.msg("请先设置数据再添加");return}const t=Array.from(n).map(n=>{const t=$(n),i=t.find(".addPressM").val()>>0||0,r=t.find(".addPressS").val()>>0||0,u=t.find(".workM").val()>>0||0,f=t.find(".workS").val()>>0||0,e=t.find(".setPress").val()>>0||0,o=t.find(".rotate").val()>>0||0;return[i,r,u,f,e,o]});this.ProcessData=t;layer.msg("工艺设置成功");$("#setCraftModel").modal("hide")})});$("#addCraftTrBtn").on("click",()=>{addDataTableTr("#setCraftList",{addPressM:0,addPressS:0,workM:0,workS:0,setPress:0,rotate:0})});$("#setCraftList,#planProcessCodeList").on("input","input",function(){onInput(this,3,0)});$("#setCraftList,#planProcessCodeList").on("focus","input",function(){$(this).val().trim()==0&&$(this).val("")});$("#setCraftList,#planProcessCodeList").on("blur","input",function(){isStrEmptyOrUndefined($(this).val().trim())&&$(this).val(0)});$("#workOrderList,#addWorkOrderList,#taskOrderList,#addTaskOrderList").on("input",".target",function(){onInput(this,3,0)});$("#workOrderList,#addWorkOrderList,#taskOrderList,#addTaskOrderList").on("focus",".target",function(){$(this).val().trim()==0&&$(this).val("")});$("#workOrderList,#addWorkOrderList,#taskOrderList,#addTaskOrderList").on("blur",".target",function(){isStrEmptyOrUndefined($(this).val().trim())&&$(this).val(0)});$("#addTaskOrderList").on("change",".workOrder",function(){const n=$(this).val();myPromise(5070,{qId:n},!0).then(n=>{const t=n[0];$(this).closest("td").next().text(t.Target).next().text(t.Left).next().text(t.Doing).nextAll().find(".deliveryTime").val(t.DeliveryTime.split(" ")[0]).datepicker("update")})});$("#taskOrderSelect").on("change",function(){const n=$(this).val();myPromise(5090,{qId:n},!0).then(n=>{const t=n[0];$("#taskOrderTarget").text(t.Target);$("#taskOrderIssueCount").text(t.IssueCount);$("#taskOrderIssue").text(t.Issue);$("#taskOrderDoingCount").text(t.DoingCount);$("#taskOrderDoneCount").text(t.DoneCount)})})}function myPromise(n,t,i=false){const r={opType:n};return t&&(r.opData=JSON.stringify(t)),i&&(t=!t),new Promise(n=>{ajaxPost("/Relay/Post",r,i=>{if(t)layer.msg(i.errmsg),i.errno==0&&n();else{if(i.errno!=0)return layer.msg(i.errmsg);n(i.datas)}})})}function _tablesConfig(n,t,i=1){const r={dom:'<"pull-left"l><"pull-right"f>rt<"col-sm-5"i><"col-sm-7"p>',bAutoWidth:!1,destroy:!0,paging:!0,searching:n,ordering:n,data:t,aaSorting:[[i,"asc"]],aLengthMenu:[20,40,60],iDisplayLength:20,language:oLanguage,columns:[{data:null,title:"序号",render:_tableSet().order,sWidth:"80px"}]};return n&&r.columns.unshift({data:null,title:"",render:_tableSet().isEnable,orderable:!1,sWidth:"80px"}),r}function _tableSet(){return{order:(n,t,i,r)=>r.row+1,isEnable:n=>`<input type="checkbox" class="icb_minimal isEnable" value="${n.Id}">`,input:(n,t)=>`<span class="textOn">${t}</span><input type="text" class="form-control text-center textIn ${n} hidden" maxlength="20" style="min-width:120px;width:${n==="remark"?"100%":"auto"}" value=${t}>`,addInput:(n,t,i)=>`<input type="text" class="form-control text-center ${n}" style="min-width:120px;width:${t}", value="${i}">`,select:(n,t,i)=>`<span class="textOn">${i}</span><select class="form-control hidden textIn ${t}" style="min-width:120px">${n}</select>`,addSelect:(n,t)=>`<select class="form-control ${t}" style="min-width:120px">${n}</select>`,updateBtn:(n,t)=>`<button class="btn btn-success btn-xs" onclick="${n}.call(this)" value="${t}">修改</button>`,delBtn:()=>`<button class="btn btn-danger btn-xs" onclick="delDataTableTr.call(this)"><i class="fa fa-minus"></i></button>`,addBtn:n=>`<button class="btn btn-success btn-xs" onclick="${n}.call(this)"><i class="fa fa-plus"></i></button>`,setBtn:()=>'<button class="btn btn-primary btn-sm set-btn">设置<\/button>',detailBtn:(n,t)=>`<button class="btn btn-info btn-sm" onclick="${n}.call(this)" value="${t}">查看</button>`,processDetail:n=>n.replace(/,/g," > "),isRework:()=>'<select class="form-control isRework" style="width:100px"><option value="0">否<\/option><option value="1">是<\/option><\/select>',day:(n,t)=>`<span class="textOn">${t.split(" ")[0]}</span><input type="text" class="pointer textIn hidden form_date form-control text-center ${n}" style="min-width: 100px">`,addDay:(n,t)=>`<input type="text" class="pointer form_date form-control text-center ${n}" value="${t.split(" ")[0]}" style="min-width: 100px">`}}function addDataTableTr(n,t){$(n).DataTable().row.add(t).draw(!1)}function delDataTableTr(){const n=$(this).parents("tr")[0],i=$(n).find("td:first").text()>>0,r=$(n).parents("table").prop("id"),t=$(`#${r}`).DataTable();t.row(n).remove().draw(!1);t.column(0).nodes().each(n=>{const t=$(n).text()>>0;t>i&&$(n).text(t-1)})}function getDataTableRow(n){return $(n).DataTable().rows().nodes()}function initCheckboxAddEvent(n,t){const i=this.api();$(this).find(".isEnable").iCheck({handle:"checkbox",checkboxClass:"icheckbox_minimal-blue",increaseArea:"20%"}).on("ifChanged",function(){const r=$(this).parents("tr"),u=r[0];$(this).is(":checked")?(n.push(u),t&&(t(r,i.row(u).data()),r.find(".textOn").addClass("hidden").siblings(".textIn").removeClass("hidden"))):(n.splice(n.indexOf(u),1),t&&r.find(".textIn").addClass("hidden").siblings(".textOn").removeClass("hidden"))})}function delTableRow(n,t,i){if(!n.length)return layer.msg("请选择需要删除的数据");const r=[];n.forEach(n=>{const t=$(n);r.push(t.find(".isEnable").val()>>0)});myPromise(t,{ids:r.join()}).then(i)}function addTableRow(n,t,i,r){const f=[],u=getDataTableRow(n);if(!u.length){layer.msg("请先设置数据再添加");return}for(let n=0,i=u.length;n<i;n++){const i=t($(u[n]),!0);if(!i)return;f.push(i)}myPromise(i,f).then(r)}function updateTableRow(n,t,i,r){if(!n.length){layer.msg("请选择需要修改的数据");return}const u=[];for(let i=0,r=n.length;i<r;i++){const r=t($(n[i]),!1);if(!r)return;u.push(r)}myPromise(i,u).then(r)}function initDayTime(n){$(n).find(".form_date").attr("readonly",!0).datepicker({language:"zh-CN",format:"yyyy-mm-dd",maxViewMode:2,todayBtn:"linked",autoclose:!0})}function getPersonList(){myPromise(5e3).then(n=>{_personTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"Account",title:"用户名",render:i.input.bind(null,"account")},{data:"Number",title:"编号",render:i.input.bind(null,"number")},{data:"Name",title:"姓名",render:i.input.bind(null,"name")},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_personTrs,(n,t)=>{n.find(".account").val(t.Account),n.find(".number").val(t.Number),n.find(".name").val(t.Name),n.find(".remark").val(t.Remark)})};$("#personList").DataTable(t)})}function getPersonTrInfo(n,t){const i=n.find(".account").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("用户名不能为空");const r=n.find(".number").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("编号不能为空");const u=n.find(".name").val().trim();if(isStrEmptyOrUndefined(u))return void layer.msg("姓名不能为空");const f={Account:i,Number:r,Name:u,Remark:n.find(".remark").val()};return t||(f.Id=n.find(".isEnable").val()>>0),f}function updatePerson(){updateTableRow(_personTrs,getPersonTrInfo,5001,getPersonList)}function addPersonModel(){const i={Account:"",Number:"",Name:"",Remark:""},t=_tablesConfig(!1,[i]),n=_tableSet();t.columns=t.columns.concat([{data:"Account",title:"用户名",render:n.addInput.bind(null,"account","auto")},{data:"Number",title:"编号",render:n.addInput.bind(null,"number","auto")},{data:"Name",title:"姓名",render:n.addInput.bind(null,"name","auto")},{data:"Remark",title:"备注",render:n.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:n.delBtn}]);$("#addPersonList").DataTable(t);$("#addPersonListBtn").off("click").on("click",()=>addDataTableTr("#addPersonList",i));$("#addPersonModel").modal("show")}function addPerson(){addTableRow("#addPersonList",getPersonTrInfo,5002,()=>{$("#addPersonModel").modal("hide"),getPersonList()})}function delPerson(){delTableRow(_personTrs,5003,getPersonList)}function getDeviceList(){const n=myPromise(5020),t=myPromise(5010);Promise.all([n,t]).then(n=>{_deviceTrs=[];const t=_tablesConfig(!0,n[1]),i=_tableSet();t.columns=t.columns.concat([{data:"Category",title:"类型",render:i.select.bind(null,setOptions(n[0],"Category"),"category")},{data:"Code",title:"机台号",render:i.input.bind(null,"code")},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_deviceTrs,(n,t)=>{n.find(".category").val(t.CategoryId),n.find(".code").val(t.Code),n.find(".remark").val(t.Remark)})};$("#deviceList").DataTable(t)})}function getDeviceTrInfo(n,t){const i=n.find(".category").val();if(isStrEmptyOrUndefined(i))return void layer.msg("请选择设备类型");const r=n.find(".code").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("机台号不能为空");const u={CategoryId:i,Code:r,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function updateDevice(){updateTableRow(_deviceTrs,getDeviceTrInfo,5011,getDeviceList)}function addDeviceModel(){myPromise(5020).then(n=>{const r={Category:"",Code:"",Remark:""},i=_tablesConfig(!1,[r]),t=_tableSet();i.columns=i.columns.concat([{data:"Category",title:"类型",render:t.addSelect.bind(null,setOptions(n,"Category"),"category")},{data:"Code",title:"机台号",render:t.addInput.bind(null,"code","auto")},{data:"Remark",title:"备注",render:t.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:t.delBtn}]);$("#addDeviceList").DataTable(i);$("#addDeviceListBtn").off("click").on("click",()=>addDataTableTr("#addDeviceList",r));$("#addDeviceModel").modal("show")})}function addDevice(){addTableRow("#addDeviceList",getDeviceTrInfo,5012,()=>{$("#addDeviceModel").modal("hide"),getDeviceList()})}function delDevice(){delTableRow(_deviceTrs,5013,getDeviceList)}function showDeviceCategoryModal(){getDeviceCategoryList();$("#deviceCategoryModal").modal("show")}function getDeviceCategoryList(){myPromise(5020).then(n=>{_deviceCategoryTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"Category",title:"类型",render:i.input.bind(null,"category")},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_deviceCategoryTrs,(n,t)=>{n.find(".category").val(t.Category),n.find(".remark").val(t.Remark)})};$("#deviceCategoryList").DataTable(t)})}function getDeviceCategoryTrInfo(n,t){const i=n.find(".category").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("设备类型不能为空");const r={Category:i,Remark:n.find(".remark").val()};return t||(r.Id=n.find(".isEnable").val()>>0),r}function updateDeviceCategory(){updateTableRow(_deviceCategoryTrs,getDeviceCategoryTrInfo,5021,()=>{getDeviceCategoryList(),getDeviceList()})}function addDeviceCategoryModel(){const i={Category:"",Remark:""},n=_tablesConfig(!1,[i]),t=_tableSet();n.columns=n.columns.concat([{data:"Category",title:"类型",render:t.addInput.bind(null,"category","auto")},{data:"Remark",title:"备注",render:t.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:t.delBtn}]);$("#addDeviceCategoryList").DataTable(n);$("#addDeviceCategoryListBtn").off("click").on("click",()=>addDataTableTr("#addDeviceCategoryList",i));$("#addDeviceCategoryModel").modal("show")}function addDeviceCategory(){addTableRow("#addDeviceCategoryList",getDeviceCategoryTrInfo,5022,()=>{$("#addDeviceCategoryModel").modal("hide"),getDeviceCategoryList(),getDeviceList()})}function delDeviceCategory(){delTableRow(_deviceCategoryTrs,5023,()=>{getDeviceCategoryList(),getDeviceList()})}function getProcessCodeList(){myPromise(5040).then(n=>{_processCodeTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"Code",title:"编号"},{data:"Category",title:"类型"},{data:"Processes",title:"流程详情",render:i.processDetail},{data:"Remark",title:"备注"},{data:"Id",title:"修改",render:i.updateBtn.bind(null,"showUpdateProcessCodeModel"),sWidth:"80px"}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_processCodeTrs)};$("#processCodeList").DataTable(t)})}function addEditProcessCodeModel(n){const t=myPromise(5050),i=myPromise(5030);Promise.all([t,i]).then(t=>{$("#addProcessCodeCategoryName").html(setOptions(t[0],"Category"));const i=_tablesConfig(!1,t[1]),r=_tableSet();i.columns.unshift({data:null,title:"",render:r.addBtn.bind(null,"addProcessOpToCode"),orderable:!1,sWidth:"80px"});i.columns=i.columns.concat([{data:"Process",title:"流程"},{data:"Remark",title:"备注"}]);$("#addProcessCodeOpList").DataTable(i);$("#addProcessCodeBody").empty();n();$("#addProcessCodeModel").modal("show")})}function addUpProcessCode(n){const i=$("#addProcessCodeName").val().trim();if(isStrEmptyOrUndefined(i))return layer.msg("编号不能为空");const r=$("#addProcessCodeCategoryName").val();if(isStrEmptyOrUndefined(r))return layer.msg("请选择类型");const t=[];if($("#addProcessCodeBody tr").each((n,i)=>t.push($(i).attr("list"))),!t.length)return layer.msg("请设置流程");const u=t.join(),f=n?5042:5041,e=[{Code:i,CategoryId:r,List:u,Remark:$("#addProcessCodeRemark").val().trim(),Id:n?0:$("#addEditBtn").val()}];myPromise(f,e).then(()=>{$("#addProcessCodeModel").modal("hide"),getProcessCodeList()})}function addProcessOpToCode(){const t=$(this).parents("tr")[0],n=$("#addProcessCodeOpList").DataTable().row(t).data(),i=`<tr list="${n.Id}">
                             <td class="num"></td>
                             <td>${n.Process}</td>
                             <td><span class="glyphicon glyphicon-arrow-up pointer text-green upTr" aria-hidden="true" title="上移"></span></td>
                             <td><button class="btn btn-danger btn-xs delBtn"><i class="fa fa-minus"></i></button></td>
                           </tr>`;$("#addProcessCodeBody").append(i);setAddProcessOpList()}function setAddProcessOpList(){const n=$("#addProcessCodeBody tr");for(let t=0,i=n.length;t<i;t++){const i=n.eq(t);i.find(".num").text(t+1);t?i.find(".upTr").removeClass("hidden"):i.find(".upTr").addClass("hidden")}}function addProcessCodeModel(){addEditProcessCodeModel(()=>{$("#addProcessCodeName").val("");$("#addProcessCodeCategoryName ").val($("#addProcessCodeCategoryName option:first").val());$("#addProcessCodeRemark").val("");$("#addEditTitle").text("添加流程编号");$("#addEditBtn").text("添加").val(0).off("click").on("click",addUpProcessCode.bind(null,!0))})}function showUpdateProcessCodeModel(){const t=$(this).parents("tr")[0],n=$("#processCodeList").DataTable().row(t).data();addEditProcessCodeModel(()=>{$("#addProcessCodeName").val(n.Code);$("#addProcessCodeCategoryName ").val(n.CategoryId);$("#addProcessCodeRemark").val(n.Remark);const t=n.List.split(","),i=n.Processes.split(","),r=t.reduce((n,t,r)=>`${n}<tr list="${t}">
                             <td class="num"></td>
                             <td>${i[r]}</td>
                             <td><span class="glyphicon glyphicon-arrow-up pointer text-green upTr" aria-hidden="true" title="上移"></span></td>
                             <td><button class="btn btn-danger btn-xs delBtn"><i class="fa fa-minus"></i></button></td>
                           </tr>`,"");$("#addProcessCodeBody").append(r);$("#addEditTitle").text("修改流程编号");$("#addEditBtn").text("修改").val(n.Id).off("click").on("click",addUpProcessCode.bind(null,!1));setAddProcessOpList()})}function delProcessCode(){delTableRow(_processCodeTrs,5043,getProcessCodeList)}function showProcessCodeCategoryModal(){getProcessCodeCategoryList();$("#processCodeCategoryModal").modal("show")}function getProcessCodeCategoryList(){myPromise(5050).then(n=>{_processCodeCategoryTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"Category",title:"类型",render:i.input.bind(null,"category")},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_processCodeCategoryTrs,(n,t)=>{n.find(".category").val(t.Category),n.find(".remark").val(t.Remark)})};$("#processCodeCategoryList").DataTable(t)})}function getProcessCodeCategoryTrInfo(n,t){const i=n.find(".category").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("流程编号类型不能为空");const r={Category:i,Remark:n.find(".remark").val()};return t||(r.Id=n.find(".isEnable").val()>>0),r}function updateProcessCodeCategory(){updateTableRow(_processCodeCategoryTrs,getProcessCodeCategoryTrInfo,5051,getProcessCodeCategoryList)}function addProcessCodeCategoryModel(){const i={Category:"",Remark:""},n=_tablesConfig(!1,[i]),t=_tableSet();n.columns=n.columns.concat([{data:"Category",title:"类型",render:t.addInput.bind(null,"category","auto")},{data:"Remark",title:"备注",render:t.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:t.delBtn}]);$("#addProcessCodeCategoryList").DataTable(n);$("#addProcessCodeCategoryListBtn").off("click").on("click",()=>addDataTableTr("#addProcessCodeCategoryList",i));$("#addProcessCodeCategoryModel").modal("show")}function addProcessCodeCategory(){addTableRow("#addProcessCodeCategoryList",getProcessCodeCategoryTrInfo,5052,()=>{$("#addProcessCodeCategoryModel").modal("hide"),getProcessCodeCategoryList()})}function delProcessCodeCategory(){delTableRow(_processCodeCategoryTrs,5053,getProcessCodeCategoryList)}function getProcessOpList(){const n=myPromise(5020),t=myPromise(5030);Promise.all([n,t]).then(n=>{_processOpTrs=[];const t=_tablesConfig(!0,n[1]),i=_tableSet();t.columns=t.columns.concat([{data:"Process",title:"流程",render:i.input.bind(null,"process")},{data:"DeviceCategory",title:"设备类型",render:i.select.bind(null,setOptions(n[0],"Category"),"category")},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_processOpTrs,(n,t)=>{n.find(".process").val(t.Process),n.find(".category").val(t.DeviceCategoryId),n.find(".remark").val(t.Remark)})};$("#processOpList").DataTable(t)})}function getProcessOpTrInfo(n,t){const i=n.find(".process").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("流程名称不能为空");const r=n.find(".category").val();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择设备类型");const u={DeviceCategoryId:r,Process:i,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function updateProcessOp(){updateTableRow(_processOpTrs,getProcessOpTrInfo,5031,getProcessOpList)}function addProcessOpModel(){myPromise(5020).then(n=>{const r={DeviceCategory:"",Process:"",Remark:""},i=_tablesConfig(!1,[r]),t=_tableSet();i.columns=i.columns.concat([{data:"Process",title:"流程",render:t.addInput.bind(null,"process","auto")},{data:"DeviceCategory",title:"设备类型",render:t.addSelect.bind(null,setOptions(n,"Category"),"category")},{data:"Remark",title:"备注",render:t.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:t.delBtn}]);$("#addProcessOpList").DataTable(i);$("#addProcessOpListBtn").off("click").on("click",()=>addDataTableTr("#addProcessOpList",r));$("#addProcessOpModel").modal("show")})}function addProcessOp(){addTableRow("#addProcessOpList",getProcessOpTrInfo,5032,()=>{$("#addProcessOpModel").modal("hide"),getProcessOpList()})}function delProcessOp(){delTableRow(_processOpTrs,5033,getProcessOpList)}function getPlanList(){myPromise(5060).then(n=>{_planTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"Product",title:"计划号"},{data:"ProcessCodes",title:"流程编号清单"},{data:"Remark",title:"备注"},{data:"Id",title:"修改",render:i.updateBtn.bind(null,"showUpdatePlanModel"),sWidth:"80px"}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_planTrs)};$("#planList").DataTable(t)})}function disabledProcessCode(){const n=[],t=$("#planProcessCodeList .process-code-select"),i=t.find("option");(i.prop("disabled",!1),t.each((t,i)=>{const r=$(i).val();r&&n.push(r)}),n.length)&&t.find("option").each((t,i)=>{const r=$(i);~n.indexOf(r.val())&&r.prop("disabled",!0)})}function addEditPlanModel(n){_planProcessCodeInfo={};myPromise(5040).then(t=>{t.forEach(n=>_planProcessCodeInfo[n.Id]=n);const i=`<div class="temp form-group" style="border-bottom:1px solid #eee">
                        <div class="flexStyle form-group" style="justify-content:space-between">
                            <div class="flexStyle">
                                <label class="control-label text-nowrap no-margin">流程编号：</label>
                                <select class="form-control process-code-select" style="width:150px;margin-right:15px">${setOptions(t,"Code")}</select>
                                <button class="btn btn-info btn-sm browse-btn" style="margin-right:15px">浏览</button>
                                <label class="control-label text-nowrap no-margin process-code-category">类型：</label>
                            </div>
                            <button class="btn btn-danger btn-sm del-btn"><i class="fa fa-minus"></i></button>
                        </div>
                        <div class="table-responsive mailbox-messages">
                            <table class="table table-hover table-striped process-table"></table>
                        </div>
                    </div>`;$("#planProcessCodeList").empty();$("#addPlanProcessList").off("click").on("click",function(){$("#planProcessCodeList").append(i).find(".process-code-select:last").val("");disabledProcessCode();$("#planProcessCodeList .process-code-select:first option").length===$("#planProcessCodeList .temp").length&&$(this).prop("disabled",!0)});n();$("#addPlanModel").modal("show")})}function addUpPlan(n){const r=$("#addPlanName").val().trim();if(isStrEmptyOrUndefined(r))return layer.msg("计划号不能为空");const f=$("#addPlanRemark").val().trim(),t={Product:r,Remark:f};let i;n?i=5062:(i=5061,t.Id=$("#addEditPlanBtn").val());const u=[];$("#planProcessCodeList .process-table").each((n,t)=>u.push(...Array.from(getDataTableRow(t))));t.ProductProcesses=u.map(n=>{const t=$(n),i=t.closest("table").DataTable().row(t[0]).data(),u=t.find(".set-btn")[0].ProcessData||[],r={ProcessRepeat:t.find(".isRework").val()>>0,ProcessNumber:t.find(".processNumber").val(),ProcessData:JSON.stringify(u)};return i.Id?r.Id=i.Id:(r.ProcessCodeId=i.ProcessCodeId,r.ProcessId=i.ProcessId),r});myPromise(i,[t]).then(()=>{$("#addPlanModel").modal("hide"),getPlanList()})}function addPlanModel(){addEditPlanModel(()=>{$("#addEditPlanTitle").text("添加计划号");$("#addPlanName").val("");$("#addPlanRemark").val("");$("#addPlanProcessList").click();$("#addEditPlanBtn").text("添加").val(0).off("click").on("click",addUpPlan.bind(null,!0))})}function showUpdatePlanModel(){const n=$(this).val();myPromise(5060,{qId:n},!0).then(n=>{const t=n[0];addEditPlanModel(()=>{$("#addEditPlanTitle").text("修改计划号");$("#addPlanName").val(t.Product);$("#addPlanRemark").val(t.Remark);const i=t.ProductProcesses,n={};i.forEach(t=>{const i=t.ProcessCodeId;n[i]?n[i].push(t):n[i]=[t]});for(let t in n){$("#addPlanProcessList").click();$("#planProcessCodeList .process-code-select:last").val(t);$("#planProcessCodeList .process-code-category:last").text(`类型：${_planProcessCodeInfo[t].Category}`);const i=_tablesConfig(!1,n[t]),r=_tableSet();i.columns=i.columns.concat([{data:"Process",title:"流程"},{data:null,title:"可否返工",render:r.isRework},{data:"ProcessNumber",title:"单台加工数量",render:r.addInput.bind(null,"processNumber","auto")},{data:null,title:"工艺数据",render:r.setBtn}]);i.createdRow=(n,t)=>{n=$(n),n.find(".isRework").val(t.ProcessRepeat>>0),n.find(".set-btn")[0].ProcessData=JSON.parse(t.ProcessData)};$("#planProcessCodeList .process-table:last").DataTable(i)}disabledProcessCode();$("#addEditPlanBtn").text("修改").val(t.Id).off("click").on("click",addUpPlan.bind(null,!1))})})}function delPlan(){delTableRow(_planTrs,5063,getPlanList)}function getWorkOrderList(){myPromise(5070).then(n=>{_workOrderTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"WorkOrder",title:"工单",render:i.input.bind(null,"workOrder")},{data:"StateStr",title:"状态"},{data:"DeliveryTime",title:"交货日期",render:i.day.bind(null,"deliveryTime")},{data:"Target",title:"目标产量",render:i.input.bind(null,"target")},{data:"DoneTarget",title:"已完成",sClass:"text-green"},{data:"Doing",title:"加工中",sClass:"text-orange"},{data:"Remark",title:"备注",render:i.input.bind(null,"remark")}]);t.createdRow=n=>initDayTime(n);t.drawCallback=function(){initCheckboxAddEvent.call(this,_workOrderTrs,(n,t)=>{n.find(".workOrder").val(t.WorkOrder),n.find(".deliveryTime").val(t.DeliveryTime.split(" ")[0]).datepicker("update"),n.find(".target").val(t.Target),n.find(".remark").val(t.Remark)})};$("#workOrderList").DataTable(t)})}function getWorkOrderTrInfo(n,t){const i=n.find(".workOrder").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("工单不能为空");const r=n.find(".deliveryTime").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择交货日期");const u=n.find(".target").val().trim();if(isStrEmptyOrUndefined(u))return void layer.msg("目标产量不能为0");const f={WorkOrder:i,DeliveryTime:r,Target:u,Remark:n.find(".remark").val()};return t||(f.Id=n.find(".isEnable").val()>>0),f}function updateWorkOrder(){updateTableRow(_workOrderTrs,getWorkOrderTrInfo,5071,getWorkOrderList)}function addWorkOrderModel(){const i={WorkOrder:"",DeliveryTime:getDate(),Target:0,Remark:""},t=_tablesConfig(!1,[i]),n=_tableSet();t.columns=t.columns.concat([{data:"WorkOrder",title:"工单",render:n.addInput.bind(null,"workOrder","auto")},{data:"DeliveryTime",title:"交货日期",render:n.addDay.bind(null,"deliveryTime")},{data:"Target",title:"目标产量",render:n.addInput.bind(null,"target","auto")},{data:"Remark",title:"备注",render:n.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:n.delBtn}]);t.createdRow=n=>initDayTime(n);$("#addWorkOrderList").DataTable(t);$("#addWorkOrderListBtn").off("click").on("click",()=>addDataTableTr("#addWorkOrderList",i));$("#addWorkOrderModel").modal("show")}function addWorkOrder(){addTableRow("#addWorkOrderList",getWorkOrderTrInfo,5072,()=>{$("#addWorkOrderModel").modal("hide"),getWorkOrderList()})}function delWorkOrder(){delTableRow(_workOrderTrs,5073,getWorkOrderList)}function getTaskOrderList(){const n=myPromise(5060),t=myPromise(5070),i=myPromise(5090);Promise.all([n,t,i]).then(n=>{_taskOrderTrs=[];const i=_tablesConfig(!0,n[2]),t=_tableSet();i.columns=i.columns.concat([{data:"TaskOrder",title:"任务单",render:t.input.bind(null,"taskOrder")},{data:"StateStr",title:"状态"},{data:"Target",title:"目标产量",render:t.input.bind(null,"target")},{data:"Done",title:"已完成",sClass:"text-green"},{data:"Doing",title:"加工中",sClass:"text-orange"},{data:"WorkOrder",title:"工单",render:t.select.bind(null,setOptions(n[1],"WorkOrder"),"workOrder")},{data:"Product",title:"计划号",render:t.select.bind(null,setOptions(n[0],"Product"),"product")},{data:"DeliveryTime",title:"交货日期",render:t.day.bind(null,"deliveryTime")},{data:"Id",title:"详情",render:t.detailBtn.bind(null,"showTaskOrderDetailModal")},{data:"Remark",title:"备注",render:t.input.bind(null,"remark")}]);i.createdRow=n=>initDayTime(n);i.drawCallback=function(){initCheckboxAddEvent.call(this,_taskOrderTrs,(n,t)=>{n.find(".taskOrder").val(t.TaskOrder),n.find(".target").val(t.Target),n.find(".workOrder").val(t.WorkOrderId),n.find(".product").val(t.ProductId),n.find(".deliveryTime").val(t.DeliveryTime.split(" ")[0]).datepicker("update"),n.find(".remark").val(t.Remark)})};$("#taskOrderList").DataTable(i)})}function showTaskOrderDetailModal(){myPromise(5090).then(n=>{const t=$(this).val();$("#taskOrderSelect").html(setOptions(n,"TaskOrder")).val(t).trigger("change");$("#taskOrderDetailModel").modal("show")})}function getTaskOrderTrInfo(n,t){const i=n.find(".taskOrder").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("任务单不能为空");const r=n.find(".target").val().trim().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("目标产量不能为0");const u=n.find(".workOrder").val();if(isStrEmptyOrUndefined(u))return void layer.msg("请选择工单");const f=n.find(".product").val();if(isStrEmptyOrUndefined(f))return void layer.msg("请选择计划号");const e=n.find(".deliveryTime").val().trim();if(isStrEmptyOrUndefined(e))return void layer.msg("请选择交货日期");const o={TaskOrder:i,Target:r,WorkOrderId:u,ProductId:f,DeliveryTime:e,Remark:n.find(".remark").val()};return t||(o.Id=n.find(".isEnable").val()>>0),o}function updateTaskOrder(){updateTableRow(_taskOrderTrs,getTaskOrderTrInfo,5091,getTaskOrderList)}function addTaskOrderModel(){const n=myPromise(5060),t=myPromise(5070);Promise.all([n,t]).then(n=>{const i=n[1][0],u={TaskOrder:"",WorkOrderId:"",TargetWork:i.Target,Left:i.Left,Doing:i.Doing,ProductId:"",Target:0,DeliveryTime:i.DeliveryTime.split(" ")[0],Remark:""},r=_tablesConfig(!1,[u]),t=_tableSet();r.columns=r.columns.concat([{data:"TaskOrder",title:"任务单",render:t.addInput.bind(null,"taskOrder","auto")},{data:"WorkOrderId",title:"工单",render:t.addSelect.bind(null,setOptions(n[1],"WorkOrder"),"workOrder")},{data:"TargetWork",title:"目标产量"},{data:"Left",title:"未完成",sClass:"text-red"},{data:"Doing",title:"加工中",sClass:"text-orange"},{data:"ProductId",title:"计划号",render:t.addSelect.bind(null,setOptions(n[0],"Product"),"product")},{data:"Target",title:"目标产量",render:t.addInput.bind(null,"target","auto")},{data:"DeliveryTime",title:"交货日期",render:t.addDay.bind(null,"deliveryTime")},{data:"Remark",title:"备注",render:t.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:t.delBtn}]);r.createdRow=n=>initDayTime(n);$("#addTaskOrderList").DataTable(r);$("#addTaskOrderListBtn").off("click").on("click",()=>addDataTableTr("#addTaskOrderList",u));$("#addTaskOrderModel").modal("show")})}function addTaskOrder(){addTableRow("#addTaskOrderList",getTaskOrderTrInfo,5092,()=>{$("#addTaskOrderModel").modal("hide"),getTaskOrderList()})}function delTaskOrder(){delTableRow(_taskOrderTrs,5093,getTaskOrderList)}function getFlowCardList(){let n=$("#sendCardSTime").val().trim();if(isStrEmptyOrUndefined(n))return layer.msg("请选择发卡开始时间");let t=$("#sendCardETime").val().trim();if(isStrEmptyOrUndefined(t))return layer.msg("请选择发卡结束时间");if(compareDate(n,t))return layer.msg("结束时间不能小于开始时间");n+=" 00:00:00";t+=" 23:59:59";const i=$("#flowCardTaskOrderSelect").val();if(isStrEmptyOrUndefined(i))return layer.msg("请选择任务单");const r=$("#flowCardPlanSelect").val();if(isStrEmptyOrUndefined(r))return layer.msg("请选择计划号");myPromise(5110,{startTime:n,endTime:t,taskOrderId:i,productId:r},!0).then(n=>{_flowCardTrs=[];const t=_tablesConfig(!0,n),i=_tableSet();t.columns=t.columns.concat([{data:"CreateTime",title:"发卡时间"},{data:"FlowCard",title:"流程卡"},{data:"ProcessCode",title:"流程编号"},{data:"TaskOrder",title:"任务单"},{data:"Product",title:"计划号"},{data:"Batch",title:"预计工时"},{data:"Id",title:"流程详情",render:i.detailBtn.bind(null,"showTaskOrderDetailModal")},{data:"Remark",title:"备注"}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_taskOrderTrs)};$("#flowCardList").DataTable(t)})}function addFlowCardModel(){$("#addFlowCardModel").modal("show")}let _personTrs=null;let _deviceTrs=null;let _deviceCategoryTrs=null;let _processCodeTrs=null;let _processCodeCategoryTrs=null;let _processOpTrs=null;let _planTrs=null;let _planProcessCodeInfo=null;let _workOrderTrs=null;let _taskOrderTrs=null;let _flowCardTrs=null;