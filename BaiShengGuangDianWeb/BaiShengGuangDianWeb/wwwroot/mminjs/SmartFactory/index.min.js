function pageReady(){$(".sidebar-mini").addClass("sidebar-collapse");$("#sendCardSTime,#sendCardETime,#pmcChildSTime,#pmcChildETime").val(getDate()).datepicker("update");$("#pmcChildDTime").val(getNowWeekRange((new Date).getDay()==0?7:(new Date).getDay()).end).datepicker("update");initWorkshopSelect(!0);$("#workshopNavLi").one("click",getWorkshopList);$("#deviceNavLi").one("click",getDeviceList);$("#personNavLi").one("click",()=>{initPersonList()});$("#flowNavLi").one("click",getProcessCodeList);$("#processSetNavLi").one("click",getProcessList);$("#planNavLi").one("click",getPlanList);$("#workOrderNavLi").one("click",getWorkOrderList);$("#taskOrderNavLi").one("click",getTaskOrderList);$("#flowCardNavLi").one("click",()=>{const n=$("#wsSelect").val()>>0,t=myPromise(5090,{wId:n},0),i=myPromise(5040,{wId:n},0),r=myPromise(5060,{wId:n},0);Promise.all([t,i,r]).then(n=>{const t='<option value="0">所有<\/option>';$("#flowCardTaskOrderSelect").html(`${t}${setOptions(n[0].datas,"TaskOrder")}`);$("#flowCardProcessCodeSelect").html(`${t}${setOptions(n[1].datas,"Code")}`);$("#flowCardPlanSelect").html(`${t}${setOptions(n[2].datas,"Product")}`);getFlowCardList()})});$("#pmcExpelProNavLi").one("click",()=>{getNotArrangeTaskList(),getArrangeTaskList()});$("#personQueryMode").on("change",function(){const n=$(this).val();initPersonList(n)});$("#addProcessCodeBody,#addProcessCodeCategoryBody").on("click",".upTr",function(){const n=$(this).parents("tr"),t="#"+$(this).parents("tbody").attr("id"),i=n.prev();i.before(n);setAddProcessOpList(t)}).on("click",".downTr",function(){const n=$(this).parents("tr"),t="#"+$(this).parents("tbody").attr("id"),i=n.next();i.after(n);setAddProcessOpList(t)}).on("click",".delBtn",function(){const n="#"+$(this).parents("tbody").attr("id");$(this).parents("tr").remove();setAddProcessOpList(n)});$("#addPlanCapacity").on("change",function(){const n=n=>{const t=dataTableConfig(n);t.addColumns([{data:"Process",title:"流程"},{data:"Category",title:"设备类型"},{data:null,title:"产能",render:n=>`<button class="btn btn-info btn-sm capacity-btn" value="${n.Id}" process="${n.ProcessId}" p="${n.Process}">查看</button>`},{data:null,title:"是否设置",render:tableSet.isFinish}]);$("#addPlanCapacityList").DataTable(t)},t=$(this).val();t?getCapacitySetList({capacityId:t},t=>n(t.datas),0):n([])});$("#addPlanCapacityList").on("input",".rate",function(){$(this).val()>>0>100&&$(this).val(100)}).on("input",".minute,.second",function(){$(this).val()>>0>59&&$(this).val(59)}).on("click",".capacity-btn",function(){let t="qId",n=$(this).attr("list");n&&n!=0||(t="processId",n=$(this).attr("process"));var r=$(this).attr("p");const i={};i[t]=n;getDevicesOperators(i,n=>{n.Process=r,devicesOperatorsTable(n,!1,"planDevCapacitySetBox","planDevCapacitySetList","planPersonCapacitySetList")},0);$("#addPlanCapacitySetBtn").addClass("hidden")});$("#addPlanProcess").on("change",function(n,t){const i=$(this).val(),r=$("#wsSelect").val()>>0,u=myPromise(5530,{wId:r,cId:i,menu:!0},0),f=myPromise(5040,{wId:r,cId:i},0);Promise.all([u,f]).then(n=>{const i=n[1].datas;i.forEach(n=>_planProcessCodeInfo[n.Id]=n);const r=`<div class="temp form-group" style="border-bottom:1px solid #eee">
                            <div class="flexStyle form-group" style="justify-content:space-between;align-items:flex-start">
                                <div class="flexStyle" style="flex-wrap:wrap">
                                    <label class="control-label text-nowrap no-margin">流程编号：</label>
                                    <select class="form-control process-code-select" style="width:150px;margin-right:15px">${setOptions(i,"Code")}</select>
                                    <button class="btn btn-info btn-sm browse-btn" style="margin-right:15px">浏览</button>
                                    <label class="control-label text-nowrap no-margin process-code-category">类型：</label>
                                </div>
                                <button class="btn btn-danger btn-sm del-btn"><i class="fa fa-minus"></i></button>
                            </div>
                            <div class="table-responsive mailbox-messages">
                                <table class="table table-hover table-striped process-table"></table>
                            </div>
                        </div>`;$("#planProcessCodeList").empty();$("#addPlanProcessList").off("click").on("click",function(){$("#planProcessCodeList").append(r).find(".process-code-select:last").val("");disabledProcessCode();$("#planProcessCodeList .process-code-select:first option").length===$("#planProcessCodeList .temp").length&&$(this).prop("disabled",!0)});t?t(n[0].datas):$("#addPlanCapacity").html(setOptions(n[0].datas,"Capacity")).trigger("change");$("#addPlanProcessList").prop("disabled",!i.length);$("#addPlanModel").modal("show")})});$("#planProcessCodeList").on("change",".process-code-select",function(){const t=$(this).val(),n=_planProcessCodeInfo[t];$(this).siblings(".process-code-category").text(`类型：${n.Category}`);const r=n.List?n.List.split(","):[],u=n.Processes?n.Processes.split(","):[],f=r.map((t,i)=>({ProcessId:t,Process:u[i],ProcessNumber:0,ProcessCodeId:n.Id})),i=dataTableConfig(f);i.addColumns([{data:"Process",title:"流程"},{data:null,title:"可否返工",render:tableSet.isRework},{data:"ProcessNumber",title:"单台加工数量",bVisible:!1,render:tableSet.addInput.bind(null,"processNumber","auto")},{data:null,title:"工艺数据",render:tableSet.setBtn}]);$(this).closest(".temp").find(".process-table").DataTable(i);disabledProcessCode(t)}).on("click",".browse-btn",function(){myPromise(5040).then(n=>{const t=dataTableConfig(n.datas,0);t.addColumns([{data:"Code",title:"编号"},{data:"Category",title:"类型"},{data:"Processes",title:"流程详情",render:tableSet.processDetail},{data:"Remark",title:"备注"}]);$("#browseProcessCodeList").DataTable(t);$("#browseProcessCodeModel").modal("show")})}).on("click",".del-btn",function(){$(this).closest(".temp").remove();const n=$(this).closest("tr");n.find(".process-code-select").find("option").prop("disabled",!1);const t=n.find(".process-code-select").val();delDataTableTr.call(this);isStrEmptyOrUndefined(t)||disabledProcessCode(t,!1);$("#addPlanProcessList").prop("disabled",!1)}).on("click",".set-btn",function(){const t=this.ProcessData?this.ProcessData.map(n=>({addPressM:n[0],addPressS:n[1],workM:n[2],workS:n[3],setPress:n[4],rotate:n[5]})):[],n=dataTableConfig(t);n.addColumns([{data:"addPressM",title:"加压时间（M）",render:tableSet.addInput.bind(null,"addPressM","auto")},{data:"addPressS",title:"加压时间（S）",render:tableSet.addInput.bind(null,"addPressS","auto")},{data:"workM",title:"工序时间（M）",render:tableSet.addInput.bind(null,"workM","auto")},{data:"workS",title:"工序时间（S）",render:tableSet.addInput.bind(null,"workS","auto")},{data:"setPress",title:"设定压力（Kg）",render:tableSet.addInput.bind(null,"setPress","auto")},{data:"rotate",title:"下盘速度（rpm）",render:tableSet.addInput.bind(null,"rotate","auto")},{data:null,title:"删除",render:()=>'<button class="btn btn-danger btn-xs del-btn"><i class="fa fa-minus"><\/i><\/button>'}]);$("#setCraftList").DataTable(n);$("#addCraftTrBtn").prop("disabled",getDataTableRow("#setCraftList").length===8);$("#setCraftModel").modal("show");$("#addCraftBtn").off("click").on("click",()=>{const n=getDataTableRow("#setCraftList");if(!n.length){layer.msg("请先设置数据再添加");return}const t=Array.from(n).map(n=>{const t=$(n),i=t.find(".addPressM").val()>>0||0,r=t.find(".addPressS").val()>>0||0,u=t.find(".workM").val()>>0||0,f=t.find(".workS").val()>>0||0,e=t.find(".setPress").val()>>0||0,o=t.find(".rotate").val()>>0||0;return[i,r,u,f,e,o]});this.ProcessData=t;layer.msg("工艺设置成功");$("#setCraftModel").modal("hide")})});$("#setCraftList").on("click",".del-btn",function(){$("#addCraftTrBtn").prop("disabled",!1);delDataTableTr.call(this)});$("#addCraftTrBtn").on("click",function(){addDataTableTr("#setCraftList",{addPressM:0,addPressS:0,workM:0,workS:0,setPress:0,rotate:0});getDataTableRow("#setCraftList").length===8&&$(this).prop("disabled",!0)});$("#setCraftList,#planProcessCodeList,#addFlowCardProcessList,#notArrangeTaskProcessBox,#capacityTaskProcessListBox").on("input","input",function(){onInput(this,8,0)});$("#setCraftList,#planProcessCodeList,#addFlowCardProcessList,#devCapacitySetList,#personCapacitySetList,#notArrangeTaskProcessBox").on("focus","input",function(){$(this).val().trim()==0&&$(this).val("")});$("#setCraftList,#planProcessCodeList,#addFlowCardProcessList,#devCapacitySetList,#personCapacitySetList,#notArrangeTaskProcessBox").on("blur","input",function(){isStrEmptyOrUndefined($(this).val().trim())&&$(this).val(0)});$("#workOrderList,#addWorkOrderList,#taskOrderList,#addTaskOrderList").on("input",".target",function(){onInput(this,8,0)}).on("focus",".target",function(){$(this).val().trim()==0&&$(this).val("")}).on("blur",".target",function(){isStrEmptyOrUndefined($(this).val().trim())&&$(this).val(0)});$("#addTaskOrderList").on("change",".workOrder",function(){const n=$(this).val();getListNoCover(getWorkOrderList,n=>{$(this).closest("tr").find(".targetWork").text(n.length>0?n[0].Target:""),$(this).closest("tr").find(".left").text(n.length>0?n[0].Left:""),$(this).closest("tr").find(".doing").text(n.length>0?n[0].Doing:""),$(this).closest("tr").find(".deliveryTime").val(n.length>0?n[0].DeliveryTime.split(" ")[0]:"").datepicker("update")},n,!1)});$("#taskOrderSelect").on("change",function(){const n=$(this).val();getListNoCover(getTaskOrderList,n=>{const t=n[0];$("#taskOrderTarget").text(t.Target);$("#taskOrderIssueCount").text(t.IssueCount);$("#taskOrderIssue").text(t.Issue);$("#taskOrderDoingCount").text(t.DoingCount);$("#taskOrderDoneCount").text(t.DoneCount)},n,!1)});$("#processDetailList").on("click",".look-btn",function(){$(`#devCapacitySetBox`).siblings(".capacityTitle").text("");const t=this.ProcessData.map(n=>({addPressM:n[0],addPressS:n[1],workM:n[2],workS:n[3],setPress:n[4],rotate:n[5]})),n=dataTableConfig(t);n.addColumns([{data:"addPressM",title:"加压时间（M）"},{data:"addPressS",title:"加压时间（S）"},{data:"workM",title:"工序时间（M）"},{data:"workS",title:"工序时间（S）"},{data:"setPress",title:"设定压力（Kg）"},{data:"rotate",title:"下盘速度（rpm）"}]);$("#craftDetailList").DataTable(n);$("#showCraftDetailModal").modal("show")});$("#addFlowCardTaskOrderSelect").on("change",function(){const n=$(this).val();getListNoCover(getTaskOrderList,n=>{n.length&&selectTaskOrder(n[0])},n,!1)});$("#addFlowCardProcessCodeSelect").on("change",function(){const n=$(this).val();n?myPromise(5040,{qId:n},0).then(n=>{const t=n.datas[0];$("#addFlowCardType").text(t.Category);$("#addFlowCardProcessDetail").text(t.Processes.replace(/,/g," > "))}):($("#addFlowCardType").text(""),$("#addFlowCardProcessDetail").text(""))});$("#showMode").on("change",getProductionLine);$("#productionLineList").on("click",".show-task-btn",function(n){const t=$(this).val();myPromise(5250,{workOrderId:t},!0).then(n=>{const t=dataTableConfig(n.datas);t.addColumns([{data:"TaskOrder",title:"任务单"},{data:"Product",title:"计划号"},{data:null,title:"状态",render:tableSet.state},{data:"DeliveryTime",title:"交货日期",render:tableSet.delivery},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Id",title:"流程卡",render:n=>`<button class="btn btn-info btn-sm show-flow-btn" value="${n}">查看</button>`}]);$("#taskDetailList").DataTable(t);$("#showTaskDetailModal").modal("show")});n.stopPropagation()}).on("click",".work-order",function(){getLineCommon.call(this,5201,getWorkLine);const n=(n,t,i)=>{const r=dataTableConfig(n);return r.addColumns([{data:"FaultTime",title:t},{data:"WorkOrder",title:"工单"},{data:"FlowCard",title:"流程卡"},{data:"Process",title:"工序"},{data:null,title:i,render:n=>n.Remark||n.Fault}]),r},t=$(this).attr("value"),i=()=>{myPromise(5204,{workOrderId:t},!0).then(t=>{processWarningDangerTemp("warning",`报警工单（${t.datas.length}）`);$("#warningLineBox .refresh").on("click",i);$("#warningLineBox table").DataTable(n(t,"报警时间","报警信息"))})},r=()=>{myPromise(5205,{workOrderId:t},!0).then(t=>{processWarningDangerTemp("danger",`中断工单（${t.datas.length}）`);$("#dangerLineBox .refresh").on("click",r);$("#dangerLineBox table").DataTable(n(t,"中断时间","原因"))})};i();r()}).on("click",".task-order",function(){getLineCommon.call(this,5251,getTaskLine);const n=(n,t,i)=>{const r=dataTableConfig(n);return r.addColumns([{data:"FaultTime",title:t},{data:"TaskOrder",title:"任务单"},{data:"FlowCard",title:"流程卡"},{data:"Process",title:"工序"},{data:null,title:i,render:n=>n.Remark||n.Fault}]),r},t=$(this).attr("value"),f=$(this).attr("work"),i=()=>{myPromise(5251,{qId:f},!0).then(n=>{n=n.datas;processWarningDangerTemp("success",`标准工序（${n.length?n[0].Processes.length:0}）`);$("#successLineBox .refresh").on("click",i);const t=dataTableConfig(n.length?n[0].Processes:[]);t.addColumns([{data:"Process",title:"工序"},{data:null,title:"最后完成时间",render:tableSet.endFinishTime},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Qualified",title:"加工次数"},{data:"Before",title:"产量"}]);$("#successLineBox table").DataTable(t)})},r=()=>{myPromise(5254,{taskOrderId:t},!0).then(t=>{t=t.datas;processWarningDangerTemp("warning",`报警工单（${t.length}）`);$("#warningLineBox .refresh").on("click",r);$("#warningLineBox table").DataTable(n(t,"报警时间","报警信息"))})},u=()=>{myPromise(5255,{taskOrderId:t},!0).then(t=>{t=t.datas;processWarningDangerTemp("danger",`中断工单（${t.length}）`);$("#dangerLineBox .refresh").on("click",u);$("#dangerLineBox table").DataTable(n(t,"中断时间","原因"))})};i();r();u()}).on("click",".flow-card",function(){getLineCommon.call(this,5301,getFlowCardLine);const t=(n,t,i)=>{const r=dataTableConfig(n);return r.addColumns([{data:"FaultTime",title:t},{data:"FlowCard",title:"流程卡"},{data:"Process",title:"工序"},{data:null,title:i,render:n=>n.Remark||n.Fault}]),r},n=$(this).attr("value"),i=()=>{myPromise(5150,{flowCardId:n},!0).then(n=>{n=n.datas;processWarningDangerTemp("success",`流程卡工序（${n.length}）`);$("#successLineBox .refresh").on("click",i);const t=dataTableConfig(n);t.addColumns([{data:"Process",title:"工序"},{data:null,title:"最后完成时间",render:tableSet.endFinishTime},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Count",title:"加工次数"},{data:"Before",title:"产量"}]);$("#successLineBox table").DataTable(t)})},r=()=>{myPromise(5304,{flowCardId:n},!0).then(n=>{n=n.datas;processWarningDangerTemp("warning",`报警工单（${n.length}）`);$("#warningLineBox .refresh").on("click",r);$("#warningLineBox table").DataTable(t(n,"报警时间","报警信息"))})},u=()=>{myPromise(5305,{flowCardId:n},!0).then(n=>{n=n.datas;processWarningDangerTemp("danger",`中断工单（${n.length}）`);$("#dangerLineBox .refresh").on("click",u);$("#dangerLineBox table").DataTable(t(n,"中断时间","原因"))})};i();r();u()});$("#taskDetailList,#productionLineList").on("click",".show-flow-btn",function(n){const t=$(this).val();myPromise(5300,{taskOrderId:t},!0).then(n=>{const t=dataTableConfig(n.datas);t.addColumns([{data:"CreateTime",title:"发出日期"},{data:"FlowCard",title:"流程卡号"},{data:"Process",title:"当前工序"},{data:null,title:"状态",render:tableSet.state},{data:"Progress",title:"进度",render:tableSet.progress}]);$("#flowDetailList").DataTable(t);$("#showFlowDetailModal").modal("show")});n.stopPropagation()});$("#capacityProcess").on("change",function(){$("#capacitySetBtn").addClass("hidden");const n=$(this).val(),t=$(this).attr("table");t=="#capacityDetailList"&&($("#devCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="devCapacitySetList"><\/table>'),$("#personCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="personCapacitySetList"><\/table>'),devAndPersonInputInit());const i=currentCategoryId==n?{capacityId}:{categoryId:n},r=currentCategoryId==n?"":"add";getCapacitySetList(i,i=>{const u=dataTableConfig(i.datas);u.addColumns([{data:"Process",title:"流程"},{data:"Category",title:"设备类型"},{data:null,title:"产能",render:n=>`<button class="btn btn-primary btn-sm ${r} set-btn" value="${n.Id}" process="${n.ProcessId}" p="${n.Process}">设置</button>`},{data:null,title:"是否设置",render:tableSet.isFinish}]);u.createdRow=(t,i)=>{const r=$(t).find(".set-btn")[0];for(let n in i)r[n]=i[n];r.exist=currentCategoryId==n};$(t).DataTable(u)},0)});$("#addCapacityList,#capacityDetailList").on("click",".set-btn",function(){$(`#devCapacitySetBox`).siblings(".capacityTitle").text("");showCapacitySetModal.call(this);$("#capacitySetBtn").removeClass("hidden")});$("#capacityList").on("click",".look-btn",function(){$(`#devCapacitySetBox`).siblings(".capacityTitle").text("");const n=$(this).closest("tr").find(".capacity").val();showCapacityDetailModal.call(this,0,n)}).on("click",".update-btn",function(){$(`#devCapacitySetBox`).siblings(".capacityTitle").text("");const n=$(this).closest("tr").find(".capacity").val();showCapacityDetailModal.call(this,1,n)});$("#capacityDetailList").on("click",".capacity-btn",function(){let t="qId",n=$(this).val();n&&n!=0||(t="processId",n=$(this).attr("process"));var r=$(this).attr("p");const i={};i[t]=n;getDevicesOperators(i,n=>{n.Process=r,devicesOperatorsTable(n,!0)},0);$("#capacitySetBtn").addClass("hidden")});$(".calTimeBox").on("input",".ch, .cm, .cs",function(){$(this).hasClass("ch")?onInput(this,5,0):$(this).hasClass("cm")?onTimeLimitInput(this):$(this).hasClass("cs")&&onTimeLimitInput(this);exchangeTime(this)}).on("click",".set",function(){exchangeTime(this,!0)});$("#notArrangeTaskList").on("click",".del-btn",function(){const n=$(this).closest("tr");n.find(".taskOrder").find("option").prop("disabled",!1);const t=n.find(".taskOrder").val();delDataTableTr.call(this);isStrEmptyOrUndefined(t)||disabledPmcTask(t,!1);$("#addNotArrangeTaskListBtn").prop("disabled",!1);const i=$("#pmcChildAuto").is(":checked");i&&!_pmcChildAutoWait&&getTaskProcessList(0)});$(".form_date").on("change",function(){isStrEmptyOrUndefined($(this).val())&&$(this).val(getDate()).datepicker("update")});$("#pmcChildAuto").iCheck("check")}function exchangeTime(n,t=false){const i=$(n).closest("div"),r=t?0:i.find(".ch").val()>>0,u=t?0:i.find(".cm").val()>>0,f=t?0:i.find(".cs").val()>>0,o=convertSecond(r,u,f),e=convertTime(o,!1);i.find(".rm").text(e.m);i.find(".rs").text(e.s);i.find(".ch").val(r);i.find(".cm").val(u);i.find(".cs").val(f)}function getListNoCover(n,t=null,i=0,r=true,u=0){n&&n(null,!1,t,u,r,i)}function getMenuNoCover(n,t=null,i=0,r=false,u=0){n&&n(null,!0,t,u,r,i)}function initWorkshopSelect(){getMenuNoCover(getWorkshopList,n=>{var t=$("#wsSelect").val()>>0,i=t===0&&n.length>0?n[0].Id:t;$("#wsSelect").html(setOptions(n,"Workshop")).val(i);getNotArrangeTaskList();getArrangeTaskList()})}function showScheduleModal(){myPromise(5401).then(n=>{const t=dataTableConfig(n.datas);t.addColumns([{data:"Code",title:"设备"},{data:"FlowCard",title:"流程卡"},{data:null,title:"状态",render:tableSet.state},{data:"DeliveryTime",title:"交货日期",render:tableSet.delivery},{data:"Progress",title:"进度",render:tableSet.progress}]);$("#scheduleList").DataTable(t);$("#showScheduleModal").modal("show")})}function getProductionLine(){clearInterval($("#productionLineList")[0].time);$("#lineBox,#productionLineHead,#warningBox,#dangerBox,#successLineBox,#warningLineBox,#dangerLineBox").empty();const n=$("#showMode").val();[workWarningList,taskWarningList,flowWarningList][n]();[workDangerList,taskDangerList,flowDangerList][n]();myPromise([5200,5250,5300][n]).then(t=>{const i=dataTableConfig(t.datas,0),r=[{data:"WorkOrder",title:"工单"},{data:null,title:"状态",render:tableSet.state},{data:"DeliveryTime",title:"交货日期",render:tableSet.delivery},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Id",title:"任务单",render:n=>`<button class="btn btn-info btn-sm show-task-btn" value="${n}">查看</button>`},{data:"Id",title:"",visible:!1}],u=[{data:"TaskOrder",title:"任务单"},{data:"Product",title:"计划号"},{data:null,title:"状态",render:tableSet.state},{data:"DeliveryTime",title:"交货日期",render:tableSet.delivery},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Id",title:"流程卡",render:n=>`<button class="btn btn-info btn-sm show-flow-btn" value="${n}">查看</button>`}],f=[{data:"CreateTime",title:"发出日期"},{data:"FlowCard",title:"流程卡号"},{data:"Process",title:"当前工序"},{data:null,title:"状态",render:tableSet.state},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Id",title:"",visible:!1}];i.addColumns([r,u,f][n]);const e=["work-order","task-order","flow-card"][n];i.createdRow=(t,i)=>{$(t).addClass(`pointer ${e}`).attr("value",i.Id),n==1&&$(t).attr("work",i.WorkOrderId)};$("#productionLineList").DataTable(i)})}function workWarningList(){myPromise(5202).then(n=>{const t=warningDangerCount(n.datas,"WorkOrder");warningDangerTemp("warning",`报警工单（${t.count}）`,"<th>工单<\/th><th>报警次数<\/th>",t.tbody,"workWarningList")})}function workDangerList(){myPromise(5203).then(n=>{const t=warningDangerCount(n.datas,"WorkOrder");warningDangerTemp("danger",`中断工单（${t.count}）`,"<th>工单<\/th><th>中断次数<\/th>",t.tbody,"workDangerList")})}function taskWarningList(){myPromise(5252).then(n=>{const t=warningDangerCount(n.datas,"TaskOrder");warningDangerTemp("warning",`报警任务单（${t.count}）`,"<th>任务单<\/th><th>报警次数<\/th>",t.tbody,"taskWarningList")})}function taskDangerList(){myPromise(5253).then(n=>{const t=warningDangerCount(n.datas,"TaskOrder");warningDangerTemp("danger",`中断任务单（${t.count}）`,"<th>任务单<\/th><th>中断次数<\/th>",t.tbody,"taskDangerList")})}function flowWarningList(){myPromise(5302).then(n=>{const t=warningDangerCount(n.datas,"FlowCard");warningDangerTemp("warning",`报警流程卡（${t.count}）`,"<th>流程卡<\/th><th>报警次数<\/th>",t.tbody,"flowWarningList")})}function flowDangerList(){myPromise(5303).then(n=>{const t=warningDangerCount(n.datas,"FlowCard");warningDangerTemp("danger",`中断流程卡（${t.count}）`,"<th>流程卡<\/th><th>中断次数<\/th>",t.tbody,"flowDangerList")})}function warningDangerCount(n,t){let i=0,r="";return n.forEach(n=>{i+=n.Count,r+=`<tr><td>${n[t]}</td><td>${n.Count}</td></tr>`}),{count:i,tbody:r}}function warningDangerTemp(n,t,i,r,u){const f=`<div class="panel panel-${n}">
                        <div class="panel-heading">
                            <span class="glyphicon glyphicon-refresh pull-right pointer text-bold" aria-hidden="true" title="刷新" onclick="${u}()"></span>
                            <h3 class="panel-title text-center">${t}</h3>
                        </div>
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table class="table table-hover table-striped">
                                    <thead><tr>${i}</tr></thead>
                                    <tbody>${r}</tbody>
                                </table>
                            </div>
                        </div>
                    </div>`;$(`#${n}Box`).html(f)}function processWarningDangerTemp(n,t){const i=`<div class="panel panel-${n}">
                        <div class="panel-heading">
                            <span class="glyphicon glyphicon-refresh pull-right pointer text-bold refresh" aria-hidden="true" title="刷新"></span>
                            <h3 class="panel-title text-center">${t}</h3>
                        </div>
                        <div class="panel-body">
                            <div class="table-responsive mailbox-messages">
                                <table class="table table-hover table-striped"></table>
                            </div>
                        </div>
                    </div>`;$(`#${n}LineBox`).html(i)}function getLineCommon(n,t){const u=getDataTableRow("#productionLineList");Array.from(u).forEach(n=>$(n).css("background",""));$(this).css("background","#d9edf7");const i=$(this).attr("value"),r=()=>{t(i),myPromise(n,{qId:i},!0,0).then(n=>{const i=["white","green","orange","gray","darkblue","#00A9FC"];let r=0;const t=[],u=n.datas.reduce((n,u)=>`${n}<div style="width:100%;position: relative;overflow-x:scroll;height:133px"><div class="line">
                                ${u.Processes.reduce((n,u)=>(t.push(u.Faults),`${n}<div class="line-box">
                                    <div class="line-box-title">
                                        <span>${u.Process}</span>
                                        <span class="info" style="background:${i[u.State]}">${u.StateStr}</span>
                                    </div>
                                    <div class="line-box-content">
                                        <p>进度：${u.Progress}%</p>
                                        <p>合格数：${u.Qualified}</p>
                                        <p>不合格数：${u.Unqualified}</p>
                                        <p>报警列表(${u.Faults.length})：<button class="btn btn-info btn-xs show-btn" value="${r++}">查看</button></p>
                                    </div>
                                </div>`),"")}
                            </div></div>`,"");$("#lineBox").html(u).off("click").on("click",".show-btn",function(){const n=dataTableConfig(t[$(this).val()]);n.addColumns([{data:"FaultTime",title:"时间"},{data:"FlowCard",title:"流程卡"},{data:null,title:"信息",render:n=>n.Remark||n.Fault}]);$("#WarningDetailList").DataTable(n);$("#showWarningDetailModal").modal("show")})})};r();clearInterval($("#productionLineList")[0].time);$("#productionLineList")[0].time=setInterval(r,5e3)}function getWorkLine(n){myPromise(5070,{qId:n},!0,0).then(n=>{n=n.datas;const t=n[0],i=`<tr><td>${t.WorkOrder}</td><td>${t.Target}</td><td>${t.DeliveryTime.split(" ")[0]}</td><td>${t.IssueCount}</td><td>${t.DoneCount}</td><td>${t.Done}</td><td>${t.Delivery}</td><td>${t.Left}</td><td>${codeTime(t.Consume)}</td><td>${t.OnTimeRate}%</td><td>${t.RiskLevelStr}</td></tr>`;$("#productionLineHead").html(`${'<tr class="text-bold"><td>工单<\/td><td class="text-blue">交货数量<\/td><td class="text-red">交货日期<\/td><td>任务单数量<\/td><td>已完成任务单数量<\/td><td class="text-info">已完成<\/td><td class="text-green">已交货<\/td><td class="text-orange">未完成<\/td><td>已耗时<\/td><td>按时率<\/td><td>风险等级<\/td><\/tr>'}${i}`)})}function getTaskLine(n){myPromise(5090,{qId:n},!0,0).then(n=>{n=n.datas;const t=n[0],i=`<tr><td>${t.TaskOrder}</td><td>${t.Product}</td><td>${t.Target}</td><td>${t.DeliveryTime.split(" ")[0]}</td><td>${t.IssueCount}</td><td>${t.DoneCount}</td><td>${t.Done}</td><td>${t.Delivery}</td><td>${t.Left}</td><td>${codeTime(t.Consume)}</td><td>${t.OnTimeRate}%</td><td>${t.RiskLevelStr}</td></tr>`;$("#productionLineHead").html(`${'<tr class="text-bold"><td>任务单<\/td><td>计划号<\/td><td class="text-blue">交货数量<\/td><td class="text-red">交货日期<\/td><td>已发流程卡<\/td><td>以完成流程卡<\/td><td class="text-info">已完成<\/td><td class="text-green">已交货<\/td><td class="text-orange">未完成<\/td><td>已耗时<\/td><td>按时率<\/td><td>风险等级<\/td><\/tr>'}${i}`)})}function getFlowCardLine(n){const t=$("#wsSelect").val()>>0;t!==0&&myPromise(5110,{wId:t,qId:n},0).then(n=>{n=n.datas;const t=n[0],i=`<tr><td>${t.FlowCard}</td><td>${t.TaskOrder}</td><td>${t.Product}</td><td>${t.ProcessCode}</td><td>${t.Done}</td><td>${t.Left}</td><td>${codeTime(t.Consume)}</td><td>${t.OnTimeRate}%</td><td>${t.RiskLevelStr}</td></tr>`;$("#productionLineHead").html(`${'<tr class="text-bold"><td>流程卡号<\/td><td>任务单<\/td><td>计划号<\/td><td>流程编号<\/td><td class="text-info">已完成<\/td><td class="text-orange">未完成<\/td><td>已耗时<\/td><td>按时率<\/td><td>风险等级<\/td><\/tr>'}${i}`)})}function getWorkshopList(n,t=false,i=null,r=1,u=true,f=0){myPromise(5e3,{menu:t,qId:f},r).then(n=>{_workshopTrs=[];var t=n.datas;if(u)if(_workshopListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Workshop",title:"车间",render:tableSet.input.bind(null,"workshop")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.createdRow=n=>initDayTime(n);n.drawCallback=function(){initCheckboxAddEvent.call(this,_workshopTrs,(n,t)=>{n.find(".workshop").val(t.Workshop),n.find(".remark").val(t.Remark)})};_workshopListTable=$("#workshopList").DataTable(n)}else updateTable(_workshopListTable,t);i&&i(t)},r)}function getWorkshopTrInfo(n,t){const i=n.find(".workshop").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("车间名不能为空");const r={Workshop:i,Remark:n.find(".remark").val()};return t||(r.Id=n.find(".isEnable").val()>>0),r}function addWorkshopModel(){const n={Workshop:"",Remark:""},t=dataTableConfig([n]);t.addColumns([{data:"Workshop",title:"车间",render:tableSet.addInput.bind(null,"workshop","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);$("#addWorkshopList").DataTable(t);$("#addWorkshopListBtn").off("click").on("click",()=>addDataTableTr("#addWorkshopList",n));$("#addWorkshopModel").modal("show")}function addWorkshop(){addTableRow("#addWorkshopList",getWorkshopTrInfo,5002,()=>{getListNoCover(getWorkshopList),$("#addWorkshopModel").modal("hide")})}function updateWorkshop(){updateTableRow(_workshopTrs,getWorkshopTrInfo,5001,()=>{getListNoCover(getWorkshopList)})}function delWorkshop(){delTableRow(_workshopTrs,5003,()=>{getListNoCover(getWorkshopList)})}function getDeviceList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5010,{wId:e,menu:t,qId:f},r).then(n=>{_deviceTrs=[];var t=n.datas;if(u)if(_deviceListTable==null){_deviceTrs=[];const n=dataTableConfig(t,!0);n.addColumns([{data:"StateStr",title:"状态",render:tableSet.select.bind(null,tableSet.DevStateOps,"state")},{data:"Code",title:"机台号",render:tableSet.input.bind(null,"code")},{data:"Category",title:"类型",render:tableSet.select.bind(null,"","category")},{data:"Model",title:"型号",render:tableSet.select.bind(null,"","model")},{data:"Priority",title:"优先级",render:tableSet.input.bind(null,"priority")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_deviceTrs,(n,t)=>{n.find(".state").val(t.State);n.find(".code").val(t.Code);const r=myPromise(5020,{wId:e,menu:!0},0);var i=t.CategoryId;const u=myPromise(5024,{cId:t.CategoryId,menu:!0},0);Promise.all([r,u]).then(r=>{n.find(".category").html(setOptions(r[0].datas,"Category")).val(t.CategoryId).off("change").on("change",function(){i=$(this).val();myPromise(5024,{cId:i,menu:!0},0).then(t=>{n.find(".model").html(setOptions(t.datas,"Model"))})});n.find(".model").html(setOptions(r[1].datas,"Model")).val(t.ModelId)});n.find(".priority").val(t.Priority).off("input").on("input",function(){onInput(this,5,0)});n.find(".remark").val(t.Remark)})};_deviceListTable=$("#deviceList").DataTable(n)}else updateTable(_deviceListTable,t);i&&i(t)},r)}function getDeviceTrInfo(n,t){const e=$("#wsSelect").val()>>0,i=n.find(".code").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("机台号不能为空");const r=n.find(".category").val();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择设备类型");const u=n.find(".model").val();if(isStrEmptyOrUndefined(u))return void layer.msg("请选择设备型号");const f={WorkshopId:e,Code:i,CategoryId:r,ModelId:u,Priority:n.find(".priority").val()>>0,Remark:n.find(".remark").val(),State:t?1:n.find(".state").val()};return t||(f.Id=n.find(".isEnable").val()>>0),f}function showAddDeviceModel(){const n=$("#wsSelect").val()>>0,t=myPromise(5020,{wId:n,menu:!0},0),i=myPromise(5024,{wId:n,menu:!0},0);Promise.all([t,i]).then(n=>{const t=n[0].datas;let u=n[1].datas;const r={Code:"",Category:"",Model:"",Priority:0,Remark:""},i=dataTableConfig([r]);i.addColumns([{data:"Code",title:"机台号",render:tableSet.addInput.bind(null,"code","auto")},{data:"Category",title:"设备类型",render:tableSet.addSelect.bind(null,"","category")},{data:"Model",title:"设备型号",render:tableSet.addSelect.bind(null,"","model")},{data:"Priority",title:"优先级",render:tableSet.addInput.bind(null,"priority","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);i.createdRow=n=>{const i=t=>{const i=[];u.forEach(n=>{n.CategoryId==t&&i.push(n)});$(n).find(".model").html(setOptions(i,"Model"))};$(n).find(".category").html(setOptions(t,"Category")).off("change").on("change",function(){const n=$(this).val();i(n)});if(t.length>0){const n=t[0].Id;i(n)}$(n).find(".priority").off("input").on("input",function(){onInput(this,5,0)})};$("#addDeviceList").DataTable(i);$("#addDeviceListBtn").off("click").on("click",()=>addDataTableTr("#addDeviceList",r));$("#addDeviceModel").modal("show")})}function addDevice(){addTableRow("#addDeviceList",getDeviceTrInfo,5012,()=>{$("#addDeviceModel").modal("hide"),getListNoCover(getDeviceList)})}function updateDevice(){updateTableRow(_deviceTrs,getDeviceTrInfo,5011,()=>{getListNoCover(getDeviceList)})}function delDevice(){delTableRow(_deviceTrs,5013,()=>{getListNoCover(getDeviceList)})}function showDeviceCategoryModal(n=false){_deviceCategoryModel=n;getDeviceCategoryList(null,!1,null,0);$("#deviceCategoryModal").off("hide.bs.modal").on("hide.bs.modal",()=>{_deviceCategoryModel=!1}).modal("show")}function getDeviceCategoryList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5020,{wId:e,menu:t,qId:f},r).then(n=>{_deviceCategoryTrs=[];var t=n.datas;if(u)if(_deviceCategoryListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Category",title:"类型",render:tableSet.input.bind(null,"category")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_deviceCategoryTrs,(n,t)=>{n.find(".category").val(t.Category),n.find(".remark").val(t.Remark)})};_deviceCategoryListTable=$("#deviceCategoryList").DataTable(n)}else updateTable(_deviceCategoryListTable,t);i&&i(t)},r)}function getDeviceCategoryTrInfo(n,t){const u=$("#wsSelect").val()>>0,i=n.find(".category").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("设备类型不能为空");const r={WorkshopId:u,Category:i,Remark:n.find(".remark").val()};return t||(r.Id=n.find(".isEnable").val()>>0),r}function addDeviceCategoryModel(){const n={Category:"",Remark:""},t=dataTableConfig([n]);t.addColumns([{data:"Category",title:"类型",render:tableSet.addInput.bind(null,"category","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);$("#addDeviceCategoryList").DataTable(t);$("#addDeviceCategoryListBtn").off("click").on("click",()=>addDataTableTr("#addDeviceCategoryList",n));$("#addDeviceCategoryModel").modal("show")}function addDeviceCategory(){addTableRow("#addDeviceCategoryList",getDeviceCategoryTrInfo,5022,()=>{getListNoCover(getDeviceCategoryList,n=>{_deviceCategoryModel&&(_deviceCategoryCache=n)}),getListNoCover(getDeviceCategoryList),getListNoCover(getDeviceList),$("#addDeviceCategoryModel").modal("hide")})}function updateDeviceCategory(){updateTableRow(_deviceCategoryTrs,getDeviceCategoryTrInfo,5021,()=>{getListNoCover(getDeviceCategoryList),getListNoCover(getDeviceList)})}function delDeviceCategory(){delTableRow(_deviceCategoryTrs,5023,()=>{getListNoCover(getDeviceCategoryList),getListNoCover(getDeviceList)})}function showDeviceModelModal(){getListNoCover(getDeviceModelList);$("#showDeviceModelModal").modal("show")}function getDeviceModelList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5024,{wId:e,menu:t,qId:f},r).then(n=>{_deviceModelTrs=[];var t=n.datas;if(u)if(_deviceModelListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Model",title:"型号",render:tableSet.input.bind(null,"model")},{data:"Category",title:"类型",render:tableSet.select.bind(null,"","category")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_deviceModelTrs,(n,t)=>{n.find(".model").val(t.Model),getMenuNoCover(getDeviceCategoryList,i=>{n.find(".category").html(setOptions(i,"Category")).val(t.CategoryId)},0),n.find(".remark").val(t.Remark)})};_deviceModelListTable=$("#deviceModelList").DataTable(n)}else updateTable(_deviceModelListTable,t);i&&i(t)},r)}function getDeviceModelTrInfo(n,t){const f=$("#wsSelect").val()>>0,i=n.find(".category").val();if(isStrEmptyOrUndefined(i))return void layer.msg("请选择设备类型");const r=n.find(".model").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("设备型号不能为空");const u={WorkshopId:f,CategoryId:i,Model:r,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function addDeviceModelModel(){getMenuNoCover(getDeviceCategoryList,n=>{_deviceCategoryCache=n;const i={Model:"",Category:"",Remark:""},t=dataTableConfig([i]);t.addColumns([{data:"Model",title:"型号",render:tableSet.addInput.bind(null,"model","auto")},{data:"Category",title:"类型",render:tableSet.addSelect.bind(null,"","category")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);t.createdRow=n=>$(n).find(".category").html(setOptions(_deviceCategoryCache,"Category"));$("#addDeviceModelList").DataTable(t);$("#addDeviceModelListBtn").off("click").on("click",()=>addDataTableTr("#addDeviceModelList",i));$("#addDeviceModelModel").off("hide.bs.modal").on("hide.bs.modal",()=>{_deviceCategoryCache=null}).modal("show")},0)}function addDeviceModel(){addTableRow("#addDeviceModelList",getDeviceModelTrInfo,5026,()=>{getListNoCover(getDeviceModelList),getListNoCover(getDeviceList),$("#addDeviceModelModel").modal("hide")})}function updateDeviceModel(){updateTableRow(_deviceModelTrs,getDeviceModelTrInfo,5025,()=>{getListNoCover(getDeviceModelList),getListNoCover(getDeviceList)})}function delDeviceModel(){delTableRow(_deviceModelTrs,5027,()=>{getListNoCover(getDeviceModelList),getListNoCover(getDeviceList)})}function initPersonList(n="state"){const r=$("#wsSelect").val()>>0;if(r!==0){var i=`<option value="0">等于</option>`,u=`<option value="1">包含</option>`;const t=(n,t=i)=>{$("#personQueryTF").html(t),$("#personQuerySelect").html(n).removeClass("hidden"),$("#personQueryInput").addClass("hidden")};switch(n){case"state":t(`<option value="0">全部</option>`+tableSet.stateOps);break;case"levelId":getPersonGradeList(null,!0,n=>n.unshift({Id:-1,Level:"全部"},{Id:0,Level:"无"})&&t(setOptions(n,"Level")),0);break;case"processId":getProcessList(null,!0,n=>n.unshift({Id:-1,Process:"全部"},{Id:0,Process:"无"})&&t(setOptions(n,"Process")),0);break;default:t("",i+u);$("#personQueryInput").val("").removeClass("hidden");$("#personQuerySelect").addClass("hidden")}}}function getPersonList(n,t=false,i=null,r=1,u=true){const f=$("#wsSelect").val()>>0;if(f!==0){const e={wId:f,menu:t,condition:$("#personQueryTF").val()},o=$("#personQueryMode").val();e[o]=["number","name"].includes(o)?$("#personQueryInput").val().trim():$("#personQuerySelect").val();myPromise(5500,e,r).then(n=>{_personTrs=[];var t=n.datas;if(u)if(_personListTable==null){_personTrs=[];const n=dataTableConfig(t,!0);n.addColumns([{data:"StateStr",title:"状态",render:tableSet.select.bind(null,tableSet.stateOps,"state")},{data:"Number",title:"编号"},{data:"Name",title:"姓名"},{data:"Level",title:"等级",render:tableSet.select.bind(null,"","level")},{data:"Process",title:"工序",render:tableSet.select.bind(null,"","process")},{data:"Priority",title:"优先级",render:tableSet.input.bind(null,"priority")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_personTrs,(n,t)=>{n.find(".state").val(t.State);const i=myPromise(5510,{wId:f,menu:!0},0);var r=t.CategoryId;const u=myPromise(5030,{cId:r,menu:!0},0);Promise.all([i,u]).then(i=>{const r=i[0].datas;r.unshift({Id:0,Level:"无"});const u=i[1].datas;u.unshift({Id:0,Process:"无"});n.find(".level").html(setOptions(r,"Level")).val(t.LevelId);n.find(".process").html(setOptions(u,"Process")).val(t.ProcessId)});n.find(".priority").val(t.Priority).off("input").on("input",function(){onInput(this,5,0)});n.find(".remark").val(t.Remark)})};_personListTable=$("#personList").DataTable(n)}else updateTable(_personListTable,t);i&&i(t)},r)}}function getPersonTrInfo(n,t){const f=$("#wsSelect").val()>>0;let i;if(t){const t=n.find(".name"),r=t.find("option[disabled]");r.prop("disabled",!1);const u=t.val();if(r.prop("disabled",!0),isStrEmptyOrUndefined(u))return void layer.msg("请选择员工");i={WorkshopId:f,UserId:u,State:1}}else{const t=n.find(".state").val();if(isStrEmptyOrUndefined(t))return void layer.msg("请选择状态");i={State:t,Id:n.find(".isEnable").val()>>0}}const r=n.find(".level").val();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择等级");i.LevelId=r;const u=n.find(".process").val();return isStrEmptyOrUndefined(u)?void layer.msg("请选择工序"):(i.ProcessId=u,i.Priority=n.find(".priority").val()>>0,i.Remark=n.find(".remark").val(),i)}function showAddPersonModel(){const n=$("#wsSelect").val()>>0;if(n!==0){$("#addPersonList").empty();const t=myPromise(5500,{wId:n,menu:!0,add:!0},0),i=myPromise(5510,{wId:n,menu:!0},0),r=myPromise(5030,{wId:n,menu:!0},0);Promise.all([t,i,r]).then(n=>{const t=n[0].datas,i=[];t.forEach(n=>{i[n.Id]=n});const u=n[1].datas;u.unshift({Id:0,Level:"无"});const f=n[2].datas;f.unshift({Id:0,Process:"无"});const e={Name:"",Account:"",Level:"",Process:"",Priority:0,Remark:""},r=dataTableConfig();r.addColumns([{data:"Name",title:"员工姓名",render:tableSet.addSelect.bind(null,setOptions(t,"Name"),"name")},{data:"Account",title:"账号",render:tableSet.span.bind(null,"account")},{data:"Level",title:"等级",render:tableSet.addSelect.bind(null,setOptions(u,"Level"),"level")},{data:"Process",title:"工序",render:tableSet.addSelect.bind(null,setOptions(f,"Process"),"process")},{data:"Priority",title:"优先级",render:tableSet.addInput.bind(null,"priority","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:()=>'<button class="btn btn-danger btn-xs del-btn"><i class="fa fa-minus"><\/i><\/button>'}]);r.createdRow=n=>{$(n).find(".name").select2({matcher}).val(0).trigger("change");$(n).find(".priority").off("input").on("input",function(){onInput(this,5,0)})};$("#addPersonList").DataTable(r);$("#addPersonList").off("change",".name").on("change",".name",function(){const n=$(this).val();i[n]&&($(this).closest("tr").find(".account").text(i[n].Account),disabledPerson(n))}).off("click",".del-btn").on("click",".del-btn",function(){const n=$(this).closest("tr");n.find(".name").find("option").prop("disabled",!1);const t=n.find(".name").val();delDataTableTr.call(this);isStrEmptyOrUndefined(t)||disabledPerson(t,!1);$("#addPersonListBtn").prop("disabled",!1)});$("#addPersonListBtn").prop("disabled",t.length<=$("#addPersonList").DataTable().column(1).nodes().length);$("#addPersonListBtn").off("click").on("click",function(){addDataTableTr("#addPersonList",e);disabledPerson();t.length===$("#addPersonList").DataTable().column(1).nodes().length&&$(this).prop("disabled",!0)});$("#addPersonModel").modal("show")})}}function disabledPerson(n,t=true){const i=$($("#addPersonList").DataTable().columns(1).nodes()[0]).find(".name");disabledOption(i,n,t)}function updatePerson(){updateTableRow(_personTrs,getPersonTrInfo,5501,()=>{getListNoCover(getPersonList)})}function addPerson(){addTableRow("#addPersonList",getPersonTrInfo,5502,()=>{getListNoCover(getPersonList),$("#showAddPersonModel").modal("hide")})}function delPerson(){delTableRow(_personTrs,5503,()=>{getListNoCover(getPersonList)})}function showPersonGradeModal(){getListNoCover(getPersonGradeList);$("#showPersonGradeModal").modal("show")}function getPersonGradeList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5510,{wId:e,menu:t,qId:f},r).then(n=>{_personGradeTrs=[];var t=n.datas;if(u)if(_personGradeListTrs==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Level",title:"等级",render:tableSet.input.bind(null,"level")},{data:"Order",title:"顺序",render:tableSet.input.bind(null,"order")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_personGradeTrs,(n,t)=>{n.find(".level").val(t.Level);n.find(".order").val(t.Order).off("input").on("input",function(){onInput(this,5,0)});n.find(".remark").val(t.Remark)})};_personGradeListTrs=$("#personGradeList").DataTable(n)}else updateTable(_personGradeListTrs,t);i&&i(t)},r)}function getPersonGradeTrInfo(n,t){const f=$("#wsSelect").val()>>0,i=n.find(".level").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("等级不能为空");const r=n.find(".order").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("顺序不能为空");const u={WorkshopId:f,Level:i,Order:r>>0,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function updatePersonGrade(){updateTableRow(_personGradeTrs,getPersonGradeTrInfo,5511,()=>{getListNoCover(getPersonGradeList),getListNoCover(getPersonList)})}function addPersonGradeModel(){const t={Level:"",Order:"",Remark:""},n=dataTableConfig([t]);n.addColumns([{data:"Level",title:"等级",render:tableSet.addInput.bind(null,"level","auto")},{data:"Order",title:"顺序",render:tableSet.addInput.bind(null,"order","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);n.createdRow=n=>$(n).find(".order").off("input").on("input",function(){onInput(this,5,0)});$("#addPersonGradeList").DataTable(n);$("#addPersonGradeListBtn").off("click").on("click",()=>addDataTableTr("#addPersonGradeList",t));$("#addPersonGradeModel").modal("show")}function addPersonGrade(){addTableRow("#addPersonGradeList",getPersonGradeTrInfo,5512,()=>{getListNoCover(getPersonGradeList),getListNoCover(getPersonList),$("#addPersonGradeModel").modal("hide")})}function delPersonGrade(){delTableRow(_personGradeTrs,5513,()=>{getListNoCover(getPersonGradeList),getListNoCover(getPersonList)})}function getProcessCodeList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5040,{wId:e,menu:t,qId:f},r).then(n=>{_processCodeTrs=[];var t=n.datas;if(u)if(_processCodeListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Code",title:"编号"},{data:"Category",title:"类型"},{data:"Processes",title:"流程详情",render:tableSet.processDetail},{data:"Remark",title:"备注"},{data:"Id",title:"修改",render:tableSet.updateBtn.bind(null,"showUpdateProcessCodeModel"),sWidth:"80px"}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_processCodeTrs)};_processCodeListTable=$("#processCodeList").DataTable(n)}else updateTable(_processCodeListTable,t);i&&i(t)},r)}function addEditProcessCodeModel(n){getMenuNoCover(getProcessCodeCategoryList,t=>{$("#addProcessCodeCategoryName").html(setOptions(t,"Category")).off("change").on("change",function(){$("#addProcessCodeBody").empty();const n=$(this).val();getProcessCodeCategoryProcessList(n=>{const t=dataTableConfig(n);t.addColumns([{data:null,title:"",render:tableSet.addBtn.bind(null,"addProcessOpToCode"),orderable:!1,sWidth:"80px"},{data:"Process",title:"流程"},{data:"Remark",title:"备注"}]);$("#addProcessCodeOpList").DataTable(t)},0,n)});n();$("#addProcessCodeModel").modal("show")})}function addUpProcessCode(n){const u=$("#wsSelect").val()>>0,i=$("#addProcessCodeName").val().trim();if(isStrEmptyOrUndefined(i))return layer.msg("编号不能为空");const r=$("#addProcessCodeCategoryName").val()>>0;if(isStrEmptyOrUndefined(r))return layer.msg("请选择类型");const t=[];if($("#addProcessCodeBody tr").each((n,i)=>t.push($(i).attr("list"))),!t.length)return layer.msg("请设置流程");const f=t.join(),e=n?5042:5041,o=[{WorkshopId:u,Code:i,CategoryId:r,List:f,Remark:$("#addProcessCodeRemark").val().trim(),Id:n?0:$("#addEditBtn").val()}];myPromise(e,o).then(()=>{getListNoCover(getProcessCodeList),$("#addProcessCodeModel").modal("hide")})}function addProcessOpTo(n,t){const r=$(this).parents("tr")[0],i=$(n).DataTable().row(r).data(),u=`<tr list="${i.Id}">
                             <td class="num"></td>
                             <td>${i.Process}</td>
                             <td>
                                <span class="glyphicon glyphicon-arrow-up pointer text-green upTr" aria-hidden="true" title="上移"></span>
                                <span class="glyphicon glyphicon-arrow-down pointer text-red downTr" aria-hidden="true" title="下移"></span>
                             </td>
                             <td><button class="btn btn-danger btn-xs delBtn"><i class="fa fa-minus"></i></button></td>
                           </tr>`;$(t).append(u);setAddProcessOpList(t)}function addProcessOpToCode(){addProcessOpTo.call(this,"#addProcessCodeOpList","#addProcessCodeBody")}function setAddProcessOpList(n){const t=$(`${n} tr`);for(let n=0,i=t.length;n<i;n++){const r=t.eq(n);r.find(".num").text(n+1);n?r.find(".upTr").removeClass("hidden"):r.find(".upTr").addClass("hidden");n!==i-1?r.find(".downTr").removeClass("hidden"):r.find(".downTr").addClass("hidden")}}function addProcessCodeModel(){addEditProcessCodeModel(()=>{$("#addProcessCodeName,#addProcessCodeRemark").val("");$("#addProcessCodeCategoryName").trigger("change");$("#addEditTitle").text("添加流程编号");$("#addEditBtn").text("添加").val(0).off("click").on("click",addUpProcessCode.bind(null,!0))})}function showUpdateProcessCodeModel(){const t=$(this).parents("tr")[0],n=$("#processCodeList").DataTable().row(t).data();addEditProcessCodeModel(()=>{$("#addProcessCodeName").val(n.Code);$("#addProcessCodeCategoryName ").val(n.CategoryId).trigger("change");$("#addProcessCodeRemark").val(n.Remark);const t=n.List?n.List.split(","):[],i=n.Processes?n.Processes.split(","):[],r=t.reduce((n,t,r)=>`${n}<tr list="${t}">
                             <td class="num"></td>
                             <td>${i[r]}</td>
                             <td>
                                <span class="glyphicon glyphicon-arrow-up pointer text-green upTr" aria-hidden="true" title="上移"></span>
                                <span class="glyphicon glyphicon-arrow-down pointer text-red downTr" aria-hidden="true" title="下移"></span>
                             </td>
                             <td><button class="btn btn-danger btn-xs delBtn"><i class="fa fa-minus"></i></button></td>
                           </tr>`,"");$("#addProcessCodeBody").html(r);$("#addEditTitle").text("修改流程编号");$("#addEditBtn").text("修改").val(n.Id).off("click").on("click",addUpProcessCode.bind(null,!1));setAddProcessOpList("#addProcessCodeBody")})}function delProcessCode(){delTableRow(_processCodeTrs,5043,()=>{getListNoCover(getProcessCodeList)})}function showProcessCodeCategoryModal(){getListNoCover(getProcessCodeCategoryList);$("#processCodeCategoryModal").modal("show")}function getProcessCodeCategoryList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5050,{wId:e,menu:t,qId:f},r).then(n=>{_processCodeCategoryTrs=[];var t=n.datas;if(u)if(_processCodeCategoryListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Category",title:"类型"},{data:"List",title:"标准流程",render:n=>tableSet.text("流程",n.replace(/,/g," > "),200)},{data:"Remark",title:"备注"},{data:"Id",title:"修改",render:tableSet.updateBtn.bind(null,"showUpdateProcessCodeCategoryModel"),sWidth:"80px"}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_processCodeCategoryTrs)};_processCodeCategoryListTable=$("#processCodeCategoryList").DataTable(n)}else updateTable(_processCodeCategoryListTable,t);i&&i(t)},r)}function getProcessCodeCategoryProcessList(n=null,t=1,i=0,r=0){myPromise(5056,{qId:r,cId:i},t).then(t=>{_processCodeCategoryTrs=[];var i=t.datas;n&&n(i)},t)}function addEditProcessCodeCategoryModel(n){myPromise(5030,null,0).then(t=>{const i=dataTableConfig(t.datas);i.addColumns([{data:null,title:"",render:tableSet.addBtn.bind(null,"addProcessOpToCodeCategory"),orderable:!1,sWidth:"80px"},{data:"Process",title:"流程"},{data:"Remark",title:"备注"}]);$("#addProcessCodeCategoryOpList").DataTable(i);$("#addProcessCodeCategoryBody").empty();n&&n();$("#addProcessCodeCategoryModel").modal("show")})}function addUpProcessCodeCategory(n){const u=$("#wsSelect").val()>>0,i=$("#addProcessCodeCategory").val().trim();if(isStrEmptyOrUndefined(i))return layer.msg("类型不能为空");const t={WorkshopId:u,Category:i,Remark:$("#addProcessCodeCategoryRemark").val().trim()};n||(t.Id=$("#addEditProcessCategoryBtn").val());const r=Array.from($("#addProcessCodeCategoryBody tr")).map((n,t)=>{const i={Order:t+1,ProcessId:$(n).attr("list")},r=$(n).attr("processid");return r&&(i.Id=r),i});if(!r.length)return layer.msg("请设置流程");t.Processes=r;const f=n?5052:5051;myPromise(f,[t]).then(()=>{getListNoCover(getProcessCodeCategoryList),$("#addProcessCodeCategoryModel").modal("hide")})}function addProcessOpToCodeCategory(){addProcessOpTo.call(this,"#addProcessCodeCategoryOpList","#addProcessCodeCategoryBody")}function addProcessCodeCategoryModel(){addEditProcessCodeCategoryModel(()=>{$("#addProcessCodeCategory").val("");$("#addProcessCodeCategoryRemark").val("");$("#addEditProcessCategoryTitle").text("添加流程编号类型");$("#addEditProcessCategoryBtn").text("添加").val(0).off("click").on("click",addUpProcessCodeCategory.bind(null,!0))})}function showUpdateProcessCodeCategoryModel(){const n=$(this).val();getProcessCodeCategoryProcessList(t=>{addEditProcessCodeCategoryModel(()=>{const r=$(this).parents("tr")[0],i=$("#processCodeCategoryList").DataTable().row(r).data();$("#addProcessCodeCategory").val(i.Category);$("#addProcessCodeCategoryRemark").val(i.Remark);const u=t.reduce((n,t)=>`${n}<tr list="${t.ProcessId}" processid="${t.Id}">
                             <td class="num"></td>
                             <td>${t.Process}</td>
                             <td>
                                <span class="glyphicon glyphicon-arrow-up pointer text-green upTr" aria-hidden="true" title="上移"></span>
                                <span class="glyphicon glyphicon-arrow-down pointer text-red downTr" aria-hidden="true" title="下移"></span>
                             </td>
                             <td><button class="btn btn-danger btn-xs delBtn"><i class="fa fa-minus"></i></button></td>
                           </tr>`,"");$("#addProcessCodeCategoryBody").append(u);$("#addEditProcessCategoryTitle").text("修改流程编号类型");$("#addEditProcessCategoryBtn").text("修改").val(n).off("click").on("click",addUpProcessCodeCategory.bind(null,!1));setAddProcessOpList("#addProcessCodeCategoryBody")})},0,n)}function delProcessCodeCategory(){delTableRow(_processCodeCategoryTrs,5053,()=>{getListNoCover(getProcessCodeCategoryList)})}function getProcessList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5030,{wId:e,menu:t,qId:f},r).then(n=>{_processTrs=[];var t=n.datas;if(u)if(_processListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Process",title:"流程",render:tableSet.input.bind(null,"process")},{data:"DeviceCategory",title:"设备类型",render:tableSet.select.bind(null,"","category")},{data:"Order",title:"顺序",render:tableSet.input.bind(null,"order")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_processTrs,(n,t)=>{n.find(".process").val(t.Process);getMenuNoCover(getDeviceCategoryList,i=>{i.unshift({Category:"无",Id:0}),n.find(".category").html(setOptions(i,"Category")).val(t.DeviceCategoryId)});n.find(".order").val(t.Order).on("input",function(){onInput(this,5,0)});n.find(".remark").val(t.Remark)})};_processListTable=$("#processList").DataTable(n)}else updateTable(_processListTable,t);i&&i(t)},r)}function getProcessTrInfo(n,t){const f=$("#wsSelect").val()>>0,i=n.find(".process").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("流程名称不能为空");const r=n.find(".category").val();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择设备类型");const u={WorkshopId:f,DeviceCategoryId:r,Process:i,Order:n.find(".order").val()>>0,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function updateProcess(){updateTableRow(_processTrs,getProcessTrInfo,5031,()=>{getListNoCover(getProcessList)})}function addProcessModel(){getMenuNoCover(getDeviceCategoryList,n=>{const i={DeviceCategory:"",Process:"",Order:"",Remark:""};n.unshift({Category:"无",Id:0});const t=dataTableConfig([i]);t.addColumns([{data:"Process",title:"流程",render:tableSet.addInput.bind(null,"process","auto")},{data:"DeviceCategory",title:"设备类型",render:tableSet.addSelect.bind(null,setOptions(n,"Category"),"category")},{data:"Order",title:"顺序",render:tableSet.addInput.bind(null,"order","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);t.createdRow=n=>$(n).find(".order").off("input").on("input",function(){onInput(this,5,0)});$("#addProcessList").DataTable(t);$("#addProcessListBtn").off("click").on("click",()=>addDataTableTr("#addProcessList",i));$("#addProcessModel").modal("show")})}function addProcess(){addTableRow("#addProcessList",getProcessTrInfo,5032,()=>{getListNoCover(getProcessList),$("#addProcessModel").modal("hide")})}function delProcess(){delTableRow(_processTrs,5033,()=>{getListNoCover(getProcessList)})}function getPlanList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5060,{wId:e,menu:t,qId:f},r).then(n=>{_planTrs=[];var t=n.datas;if(u)if(_planListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Product",title:"计划号"},{data:"Number",title:"日产能"},{data:"Category",title:"流程编号类型"},{data:"Capacity",title:"产能配置"},{data:"ProcessCodes",title:"流程编号清单"},{data:"Remark",title:"备注"},{data:"Id",title:"修改",render:tableSet.updateBtn.bind(null,"showUpdatePlanModel"),sWidth:"80px"}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_planTrs)};_planListTable=$("#planList").DataTable(n)}else updateTable(_planListTable,t);i&&i(t)},r)}function disabledProcessCode(n,t=true){const i=$("#planProcessCodeList .process-code-select");disabledOption(i,n,t)}function addEditPlanModel(n,t){_planProcessCodeInfo={};getProcessCodeCategoryList(null,!0,i=>$("#addPlanProcess").html(setOptions(i,"Category")).val(t||i.length>0&&i[0].Id).trigger("change",n),0)}function addUpPlan(n){const s=$("#wsSelect").val()>>0,u=$("#addPlanProcess").val()>>0;if(isStrEmptyOrUndefined(u))return layer.msg("请选择流程编号类型");const f=$("#addPlanCapacity").val()>>0;if(isStrEmptyOrUndefined(f))return layer.msg("请选择产能配置");const e=$("#addPlanName").val().trim();if(isStrEmptyOrUndefined(e))return layer.msg("计划号不能为空");const h=$("#addPlanRemark").val().trim(),i={WorkshopId:s,CategoryId:u,CapacityId:f,Product:e,Remark:h};let r;n?r=5062:(r=5061,i.Id=$("#addEditPlanBtn").val());const o=[];let t=getDataTableRow("#addPlanCapacityList");for(let i=0,r=t.length;i<r;i++){const r=$(t[i]),e=r.find(".rate").val().trim()>>0;if(isStrEmptyOrUndefined(e))return layer.msg("请输入合格率");const s=r.find(".hour").val().trim()>>0,h=r.find(".minute").val().trim()>>0,c=r.find(".second").val().trim()>>0;if(isStrEmptyOrUndefined(s)&&isStrEmptyOrUndefined(h)&&isStrEmptyOrUndefined(c))return layer.msg("请输入工时");const u={Rate:e,Day:0,Hour:s,Min:h,Sec:c},f=r.find(".capacity-btn"),l=f.val(),a=f.attr("list")>>0;if(isStrEmptyOrUndefined(a))return layer.msg("请先配置工序产能");!n&&l!=0?u.Id=l:u.ProcessId=f.attr("process");o[i]=u}i.capacities=o;t=[];$("#planProcessCodeList .process-table").each((n,i)=>{Array.from(getDataTableRow(i)).forEach(n=>t.push(n))});i.Processes=t.map(n=>{const t=$(n),i=t.closest("table").DataTable().row(t[0]).data(),u=t.find(".set-btn")[0].ProcessData||[],r={ProcessRepeat:t.find(".isRework").val()>>0,ProcessNumber:t.find(".processNumber").val(),ProcessData:JSON.stringify(u)};return i.Id?r.Id=i.Id:(r.ProcessCodeId=i.ProcessCodeId,r.ProcessId=i.ProcessId),r});myPromise(r,[i]).then(()=>{getListNoCover(getPlanList),$("#addPlanModel").modal("hide")})}function addPlanModel(){$("#planDevCapacitySetBox").siblings(".capacityTitle").text("");$("#planDevCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="planDevCapacitySetList"><\/table>');$("#planPersonCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="planPersonCapacitySetList"><\/table>');devAndPersonInputInit("#planDevCapacitySetList","#planPersonCapacitySetList");addEditPlanModel(n=>{$("#addPlanCapacity").html(setOptions(n,"Capacity")).trigger("change");$("#addEditPlanTitle").text("添加计划号");$("#addPlanName,#addPlanRemark").val("");$("#addEditPlanBtn").text("添加").val(0).off("click").on("click",addUpPlan.bind(null,!0))})}function showUpdatePlanModel(){$("#planDevCapacitySetBox").siblings(".capacityTitle").text("");$("#planDevCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="planDevCapacitySetList"><\/table>');$("#planPersonCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="planPersonCapacitySetList"><\/table>');devAndPersonInputInit("#planDevCapacitySetList","#planPersonCapacitySetList");const n=$(this).val();getMenuNoCover(getPlanList,n=>{const t=n[0];addEditPlanModel(n=>{$("#addPlanCapacity").html(setOptions(n,"Capacity")).val(t.CapacityId);$("#addEditPlanTitle").text("修改计划号");$("#addPlanName").val(t.Product);$("#addPlanRemark").val(t.Remark);const u=t.capacities,r=dataTableConfig(u);r.addColumns([{data:"Process",title:"流程"},{data:"Category",title:"设备类型"},{data:null,title:"产能",render:n=>`<button class="btn btn-info btn-sm capacity-btn" value="${n.Id}" list="${n.ListId}" process="${n.ProcessId}" pid="${n.PId}" p="${n.Process}">查看</button>`},{data:null,title:"是否设置",render:tableSet.isFinish}]);$("#addPlanCapacityList").DataTable(r);const f=t.Processes,i={};f.forEach(n=>{const t=n.ProcessCodeId;i[t]?i[t].push(n):i[t]=[n]});for(let n in i){$("#addPlanProcessList").click();$("#planProcessCodeList .process-code-select:last").val(n);$("#planProcessCodeList .process-code-category:last").text(`类型：${_planProcessCodeInfo[n].Category}`);const t=dataTableConfig(i[n]);t.addColumns([{data:"Process",title:"流程"},{data:null,title:"可否返工",render:tableSet.isRework},{data:"ProcessNumber",title:"单台加工数量",bVisible:!1,render:tableSet.addInput.bind(null,"processNumber","auto")},{data:null,title:"工艺数据",render:tableSet.setBtn}]);t.createdRow=(n,t)=>{n=$(n),n.find(".isRework").val(t.ProcessRepeat>>0),n.find(".set-btn")[0].ProcessData=JSON.parse(t.ProcessData)};$("#planProcessCodeList .process-table:last").DataTable(t)}disabledProcessCode();$("#addEditPlanBtn").text("修改").val(t.Id).off("click").on("click",addUpPlan.bind(null,!1))},t.CategoryId)},0,!1,n)}function delPlan(){delTableRow(_planTrs,5063,()=>{getListNoCover(getPlanList)})}function showCapacityModel(){getListNoCover(getCapacityList);$("#showCapacityModel").modal("show")}function getCapacityList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5530,{wId:e,menu:t,qId:f},r).then(n=>{_capacityTrs=[];var t=n.datas;if(u)if(_capacityListTrs==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"Capacity",title:"配置名称",render:tableSet.input.bind(null,"capacity")},{data:"Category",title:"流程编号类型"},{data:null,title:"清单",render:n=>`<button class="btn btn-info btn-sm look-btn look-update-btn" value="${n.Id}" categoryId="${n.CategoryId}" category="${n.Category}">查看</button>`},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_capacityTrs,(n,t)=>{n.find(".capacity").val(t.Capacity),n.find(".look-update-btn").addClass("update-btn btn-success").removeClass("btn-info look-btn").text("修改"),n.find(".remark").val(t.Remark)},n=>{n.find(".look-update-btn").removeClass("update-btn btn-success").addClass("btn-info look-btn").text("查看")})};_capacityListTrs=$("#capacityList").DataTable(n)}else updateTable(_capacityListTrs,t);i&&i(t)},r)}function updateCapacityInfo(){const n=$("#wsSelect").val()>>0,t=t=>{const i=t.find(".capacity").val().trim();return isStrEmptyOrUndefined(i)?void layer.msg("名称不能为空"):{WorkshopId:n,Capacity:i,Remark:t.find(".remark").val(),Id:t.find(".isEnable").val()>>0}};updateTableRow(_capacityTrs,t,5531,()=>{getListNoCover(getCapacityList)})}function showAddCapacityCategoryModel(){$("#addCapacityCategory,#addCapacityRemark").val("");$(`#devCapacitySetBox`).siblings(".capacityTitle").text("");showCapacityDetailModal(2)}function showCapacityDetailModal(n,t=""){const r=$("#wsSelect").val()>>0;$(`#addCapacityCategory`).removeAttr("disabled");exchangeTime($(".calTimeBox"),!0);let i="";switch(n){case 0:case 1:currentCategoryId=$(this).attr("categoryId");capacityId=$(this).val();i=`产能清单${n==0?"查看":"修改"}`;$(`#showCapacityDetailModal .add`).addClass("hidden");$(`#addCapacityCategory`).attr("disabled","disabled").val(t).closest("div").removeClass("hidden");$(`#showCapacityDetailModal ${n==0?".look":".update"}`).removeClass("hidden");$(`#showCapacityDetailModal ${n!=0?".look":".update"}`).addClass("hidden");$("#capacitySetBtn").addClass("hidden");break;case 2:i=`添加产能配置`;currentCategoryId=0;capacityId=0;$(`#showCapacityDetailModal .look`).addClass("hidden");$(`#showCapacityDetailModal .update`).addClass("hidden");$(`#showCapacityDetailModal .add`).removeClass("hidden");$("#capacitySetBtn").addClass("hidden")}if($("#showCapacityDetailModal").find(".modal-title").text(i),$("#devCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="devCapacitySetList"><\/table>'),$("#personCapacitySetList").closest(".mailbox-messages").empty().append('<table class="table table-hover table-striped table-condensed table-responsive" id="personCapacitySetList"><\/table>'),devAndPersonInputInit(),_capacityDetailListType!=n&&_capacityDetailList!=null&&_capacityDetailList.clear(),_capacityDetailListType=n,n==0)getCapacitySetList({capacityId},n=>{$("#capacityDetailCode").text($(this).attr("category"));const t=dataTableConfig(n.datas);t.addColumns([{data:"Process",title:"流程"},{data:"Category",title:"设备类型"},{data:null,title:"产能",render:n=>`<button class="btn btn-info btn-sm capacity-btn" value="${n.Id}" process="${n.ProcessId}" p="${n.Process}">查看</button>`},{data:null,title:"是否设置",render:tableSet.isFinish}]);_capacityDetailList=$("#capacityDetailList").DataTable(t);$("#showCapacityDetailModal").modal("show")},0);else if(n==1){const n=$(this).attr("categoryId");$(".updateCapacityBtn").val(capacityId);getMenuNoCover(getProcessCodeCategoryList,t=>{$("#capacityDetailList").empty(),$("#capacityProcess").html(setOptions(t,"Category")).val(n).trigger("change"),$("#showCapacityDetailModal").modal("show")})}else n==2&&getMenuNoCover(getProcessCodeCategoryList,n=>{if($("#capacityDetailList").empty(),$("#capacityProcess").html(setOptions(n,"Category")),n.length!=0){const t=n[0].Id;$(".updateCapacityBtn").val(capacityId);$("#capacityProcess").val(t).trigger("change")}else $("#capacityDetailList").empty();$("#showCapacityDetailModal").modal("show")})}function devicesOperatorsTable(n,t=false,i="devCapacitySetBox",r="devCapacitySetList",u="personCapacitySetList"){const e=n=>{const t=$(n).val();$(`#${r}, #${u}`).find(".rate").val(t)};$(`#${r}, #${u}`).off("change").on("change",".rate",function(){e(this)}).off("input").on("input",".rate",function(){e(this)}).off("blur").on("blur",".rate",function(){e(this)});const s=n.Process;var h=`产能${t?"查看":"设置"}-${s}`;$(`#${i}`).siblings(".capacityTitle").text(h);const f=n.Devices;if(f){const n=dataTableConfig(f);n.addColumns([{data:"Category",title:"设备类型"},{data:"Model",title:"设备型号"},{data:"Count",title:"设备数量",sClass:"count"},{data:"Single",title:"单次加工",render:t?n=>n:tableSet.addNumberInput.bind(null,"single","50px")},{data:"Rate",title:"合格率(%)",render:t?n=>n:tableSet.addNumberInput.bind(null,"rate","50px")},{data:"WorkTime",title:"总工时",render:tableSet.msCal.bind(null,"workTime",t)},{data:"ProductTime",title:"单次工时",render:tableSet.msCal.bind(null,"productTime",t)},{data:"SingleCount",title:"日加工次数",sClass:"sCount"},{data:"Number",title:"单台日产能",sClass:"number"},{data:"Total",title:"日总产能",sClass:"total"}]);$(`#${r}`).DataTable(n)}f&&f.length?$(`#${i}`).removeClass("hidden"):$(`#${i}`).addClass("hidden");const o=n.Operators;if(o){const n=dataTableConfig(o);n.addColumns([{data:"Level",title:"等级"},{data:"Count",title:"员工数量",sClass:"count"},{data:"Single",title:"单次加工",render:t?n=>n:tableSet.addNumberInput.bind(null,"single","50px")},{data:"Rate",title:"合格率",render:t?n=>n:tableSet.addNumberInput.bind(null,"rate","50px")},{data:"WorkTime",title:"总工时",render:tableSet.msCal.bind(null,"workTime",t)},{data:"ProductTime",title:"单次工时",render:tableSet.msCal.bind(null,"productTime",t)},{data:"SingleCount",title:"日加工次数",sClass:"sCount"},{data:"Number",title:"单台日产能",sClass:"number"},{data:"Total",title:"日总产能",sClass:"total"}]);$(`#${u}`).DataTable(n)}}function devAndPersonInputInit(n="devCapacitySetList",t="personCapacitySetList"){var i=n=>{const i=n.find(".single").val()>>0,r=n.find(".sCount").text()>>0,u=n.find(".count").text()>>0,t=i*r;n.find(".number").text(t);n.find(".total").text(u*t)},r;$(`${n},${t}`).on("input",".single",function(){const n=$(this).closest("tr");i(n)});r=n=>{var u,e;let i=n.find(".minute.workTime").val()>>0,r=n.find(".second.workTime").val()>>0,t=convertSecond(0,i,r);u=86400;t>u&&(t=u,e=convertTime(u,!1),i=e.m,r=e.s,n.find(".minute.workTime").val(i),n.find(".second.workTime").val(r));let o=n.find(".minute.productTime").val()>>0,s=n.find(".second.productTime").val()>>0,f=convertSecond(0,o,s);f>t&&(f=t,o=i,s=r,n.find(".minute.productTime").val(o),n.find(".second.productTime").val(s));const h=f!=0?Math.floor(t/f):0;n.find(".sCount").text(h)};$(`${n},${t}`).on("input",".minute,.second",function(){const n=$(this).closest("tr");r(n);i(n)})}function showCapacitySetModal(){let t="processId",n=$(this).val();this.exist?(t="qId",n==0&&(t="processId",n=$(this).attr("process"))):n=$(this).attr("process");var r=$(this).attr("p");const i={};i[t]=n;this.Devices||this.Operators?devicesOperatorsTable(this):getDevicesOperators(i,n=>{n.Process=r,addOrderData(n.Devices),this.OldDevices=JSON.stringify(n.Devices),addOrderData(n.Operators),this.OldOperators=JSON.stringify(n.Operators),devicesOperatorsTable(n)},0);$("#capacitySetBtn").off("click").on("click",()=>{let n=!1;const t=(t,i,r)=>{if($(t).DataTable().data().length!=0){const u=Array.from($(t).DataTable().data()),f=Array.from(getDataTableRow(t));this[i]=u.map((n,t)=>{const i=$(f[t]);n.Single=i.find(".single").val()>>0;n.Rate=i.find(".rate").val()>>0;let r=i.find(".minute.workTime").val()>>0,u=i.find(".second.workTime").val()>>0;n.WorkTime=convertSecond(0,r,u);let e=i.find(".minute.productTime").val()>>0,o=i.find(".second.productTime").val()>>0;return n.ProductTime=convertSecond(0,e,o),n.SingleCount=i.find(".sCount").text()>>0,n.Number=i.find(".number").text()>>0,n.Total=i.find(".total").text()>>0,n});($(this).hasClass("add")||this[r]!=JSON.stringify(this[i]))&&(n=!0)}};t("#devCapacitySetList","Devices","OldDevices");t("#personCapacitySetList","Operators","OldOperators");layer.msg("产能设置成功");n?$(this).closest("tr").find(".glyphicon").removeClass("glyphicon-ok glyphicon-remove text-red text-green text-orange").addClass("glyphicon-ok text-orange"):$(this).val()==0?$(this).closest("tr").find(".glyphicon").removeClass("glyphicon-ok glyphicon-remove text-red text-green text-orange").addClass("glyphicon-remove text-red"):$(this).closest("tr").find(".glyphicon").removeClass("glyphicon-ok glyphicon-remove text-red text-green text-orange").addClass("glyphicon-ok text-green")})}function addCapacity(n=false){const t=$("#wsSelect").val()>>0,i=$("#addCapacityCategory").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("名称不能为空");const e=$("#addCapacityRemark").val().trim(),r=$("#capacityProcess").val();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择流程编号");const u=$(getDataTableRow("#capacityDetailList")).find(".set-btn"),f=[];for(let n=0,i=u.length;n<i;n++){const r=u[n];if(!r.Devices&&!r.Operators)return void layer.msg("请设置产能");r.WorkshopId=t;const i=[];for(let n=0;n<20;n++)i[n]=[];r.Devices&&r.Devices.forEach(n=>{i[0].push(n.ModelId),i[1].push(n.Single),i[2].push(n.Rate),i[3].push(n.WorkTime),i[4].push(n.ProductTime),i[5].push(n.SingleCount),i[6].push(n.Number)});r.Operators&&r.Operators.forEach(n=>{i[10].push(n.LevelId),i[11].push(n.Single),i[12].push(n.Rate),i[13].push(n.WorkTime),i[14].push(n.ProductTime),i[15].push(n.SingleCount),i[16].push(n.Number)});f[n]={ProcessId:$(r).attr("process")>>0,DeviceModel:i[0].join(),DeviceSingle:i[1].join(),DeviceRate:i[2].join(),DeviceWorkTime:i[3].join(),DeviceProductTime:i[4].join(),DeviceSingleCount:i[5].join(),DeviceNumber:i[6].join(),OperatorLevel:i[10].join(),OperatorSingle:i[11].join(),OperatorRate:i[12].join(),OperatorWorkTime:i[13].join(),OperatorProductTime:i[14].join(),OperatorSingleCount:i[15].join(),OperatorNumber:i[16].join()}}const o=[{WorkshopId:t,Capacity:i,CategoryId:r,Remark:e,List:f}];myPromise(5532,o).then(()=>{getListNoCover(getCapacityList),n&&$("#showAddCapacityCategoryModel").modal("hide")})}function updateCapacity(n,t=false){const r=$(n).val(),i=$("#capacityProcess").val();if(isStrEmptyOrUndefined(i))return void layer.msg("请选择流程编号");const u=$(getDataTableRow("#capacityDetailList")).find(".set-btn"),f=[];for(let n=0,t=u.length;n<t;n++){const t=u[n];if(!t.Devices&&!t.exist&&!t.Operators&&!t.exist)return void layer.msg("请设置产能");const i=[];for(let n=0;n<20;n++)i[n]=[];t.Devices&&t.Devices.forEach(n=>{i[0].push(n.ModelId),i[1].push(n.Single),i[2].push(n.Rate),i[3].push(n.WorkTime),i[4].push(n.ProductTime),i[5].push(n.SingleCount),i[6].push(n.Number)});t.Operators&&t.Operators.forEach(n=>{i[10].push(n.LevelId),i[11].push(n.Single),i[12].push(n.Rate),i[13].push(n.WorkTime),i[14].push(n.ProductTime),i[15].push(n.SingleCount),i[16].push(n.Number)});f[n]={CapacityId:r,ProcessId:t.exist?$(t).attr("process"):$(t).val(),DeviceModel:t.Devices?i[0].join():t.DeviceModel,DeviceSingle:t.Devices?i[1].join():t.DeviceSingle,DeviceRate:t.Devices?i[2].join():t.DeviceRate,DeviceWorkTime:t.Devices?i[3].join():t.DeviceWorkTime,DeviceProductTime:t.Devices?i[4].join():t.DeviceProductTime,DeviceSingleCount:t.Devices?i[5].join():t.DeviceSingleCount,DeviceNumber:t.Devices?i[6].join():t.DeviceNumber,OperatorLevel:t.Operators?i[10].join():t.OperatorLevel,OperatorSingle:t.Operators?i[11].join():t.OperatorSingle,OperatorRate:t.Operators?i[12].join():t.OperatorRate,OperatorWorkTime:t.Operators?i[13].join():t.OperatorWorkTime,OperatorProductTime:t.Operators?i[14].join():t.OperatorProductTime,OperatorSingleCount:t.Operators?i[15].join():t.OperatorSingleCount,OperatorNumber:t.Operators?i[16].join():t.OperatorNumber,Id:t.exist?$(t).val():0}}const e={Id:r,CategoryId:i,List:f};myPromise(5561,e).then(()=>{currentCategoryId=i,getListNoCover(getCapacityList),t&&$("#showCapacityDetailModal").modal("hide")})}function delCapacity(){delTableRow(_capacityTrs,5533,()=>{getListNoCover(getCapacityList)})}function getDevicesOperators(n,t=null,i=1){myPromise(5564,n,i).then(n=>{t&&t(n)})}function getCapacitySetList(n,t=null,i=1){myPromise(5560,n,i).then(n=>{t&&t(n)})}function getWorkOrderList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5070,{wId:e,menu:t,qId:f},r).then(n=>{_workOrderTrs=[];var t=n.datas;if(u)if(_workOrderTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"WorkOrder",title:"工单",render:tableSet.input.bind(null,"workOrder")},{data:"StateStr",title:"状态"},{data:"DeliveryTime",title:"交货日期",render:tableSet.day.bind(null,"deliveryTime")},{data:"Target",title:"目标产量",render:tableSet.input.bind(null,"target")},{data:"DoneTarget",title:"已完成",sClass:"text-green"},{data:"Doing",title:"加工中",sClass:"text-orange"},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.createdRow=n=>initDayTime(n);n.drawCallback=function(){initCheckboxAddEvent.call(this,_workOrderTrs,(n,t)=>{n.find(".workOrder").val(t.WorkOrder),n.find(".deliveryTime").val(t.DeliveryTime.split(" ")[0]).datepicker("update"),n.find(".target").val(t.Target),n.find(".remark").val(t.Remark)})};_workOrderTable=$("#workOrderList").DataTable(n)}else updateTable(_workOrderTable,t);i&&i(t)},r)}function getWorkOrderTrInfo(n,t){const e=$("#wsSelect").val()>>0,i=n.find(".workOrder").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("工单不能为空");const r=n.find(".deliveryTime").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("请选择交货日期");const u=n.find(".target").val().trim();if(isStrEmptyOrUndefined(u))return void layer.msg("目标产量不能为0");const f={WorkshopId:e,WorkOrder:i,DeliveryTime:r,Target:u,Remark:n.find(".remark").val()};return t||(f.Id=n.find(".isEnable").val()>>0),f}function updateWorkOrder(){updateTableRow(_workOrderTrs,getWorkOrderTrInfo,5071,()=>{getListNoCover(getWorkOrderList)})}function addWorkOrderModel(){const t={WorkOrder:"",DeliveryTime:getDate(),Target:0,Remark:""},n=dataTableConfig([t]);n.addColumns([{data:"WorkOrder",title:"工单",render:tableSet.addInput.bind(null,"workOrder","auto")},{data:"DeliveryTime",title:"交货日期",render:tableSet.addDay.bind(null,"deliveryTime")},{data:"Target",title:"目标产量",render:tableSet.addInput.bind(null,"target","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);n.createdRow=n=>initDayTime(n);$("#addWorkOrderList").DataTable(n);$("#addWorkOrderListBtn").off("click").on("click",()=>addDataTableTr("#addWorkOrderList",t));$("#addWorkOrderModel").modal("show")}function addWorkOrder(){addTableRow("#addWorkOrderList",getWorkOrderTrInfo,5072,()=>{getListNoCover(getWorkOrderList),$("#addWorkOrderModel").modal("hide")})}function delWorkOrder(){delTableRow(_workOrderTrs,5073,()=>{getListNoCover(getWorkOrderList)})}function getTaskOrderList(n,t=false,i=null,r=1,u=true,f=0){const e=$("#wsSelect").val()>>0;e!==0&&myPromise(5090,{wId:e,menu:t,qId:f},r).then(n=>{_taskOrderTrs=[];var t=n.datas;if(u)if(_capacityListTrs==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"TaskOrder",title:"任务单",render:tableSet.input.bind(null,"taskOrder")},{data:"StateStr",title:"状态"},{data:"Target",title:"目标产量",render:tableSet.input.bind(null,"target")},{data:"Done",title:"已完成",sClass:"text-green"},{data:"Doing",title:"加工中",sClass:"text-orange"},{data:"WorkOrder",title:"工单",render:tableSet.select.bind(null,"","workOrder")},{data:"Product",title:"计划号",render:tableSet.select.bind(null,"","product")},{data:"DeliveryTime",title:"交货日期",render:tableSet.day.bind(null,"deliveryTime")},{data:"Id",title:"详情",render:tableSet.detailBtn.bind(null,"showTaskOrderDetailModal")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);n.createdRow=n=>initDayTime(n);n.drawCallback=function(){initCheckboxAddEvent.call(this,_taskOrderTrs,(n,t)=>{n.find(".taskOrder").val(t.TaskOrder);n.find(".target").val(t.Target);const i=myPromise(5070,{wId:e,menu:!0},0),r=myPromise(5060,{wId:e,menu:!0},0);Promise.all([i,r]).then(i=>{const r=i[0].datas,u=i[1].datas;n.find(".workOrder").html(setOptions(r,"WorkOrder")).val(t.WorkOrderId);n.find(".product").html(setOptions(u,"Product")).val(t.ProductId)});n.find(".deliveryTime").val(t.DeliveryTime.split(" ")[0]).datepicker("update");n.find(".remark").val(t.Remark)})};_taskOrderTable=$("#taskOrderList").DataTable(n)}else updateTable(_taskOrderTable,t);i&&i(t)},r)}function showTaskOrderDetailModal(){const n=$(this).val();getListNoCover(getTaskOrderList,t=>{$("#taskOrderSelect").html(setOptions(t,"TaskOrder")).val(n).trigger("change"),$("#taskOrderDetailModel").modal("show")},0,!1)}function getTaskOrderTrInfo(n,t){const s=$("#wsSelect").val()>>0,i=n.find(".taskOrder").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("任务单不能为空");const r=n.find(".target").val().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("目标产量不能为0");const u=n.find(".workOrder").val();if(isStrEmptyOrUndefined(u))return void layer.msg("请选择工单");const f=n.find(".product").val();if(isStrEmptyOrUndefined(f))return void layer.msg("请选择计划号");const e=n.find(".deliveryTime").val().trim();if(isStrEmptyOrUndefined(e))return void layer.msg("请选择交货日期");const o={WorkshopId:s,TaskOrder:i,Target:r,WorkOrderId:u,ProductId:f,DeliveryTime:e,Remark:n.find(".remark").val()};return t||(o.Id=n.find(".isEnable").val()>>0),o}function updateTaskOrder(){updateTableRow(_taskOrderTrs,getTaskOrderTrInfo,5091,()=>{getListNoCover(getTaskOrderList)})}function addTaskOrderModel(){const n=$("#wsSelect").val()>>0;if(n!==0){const t=myPromise(5070,{wId:n,menu:!0},0),i=myPromise(5060,{wId:n,menu:!0},0);Promise.all([t,i]).then(n=>{const r=n[0].datas,u=n[1].datas,i={TaskOrder:"",WorkOrderId:"",TargetWork:"",Left:"",Doing:"",ProductId:"",Target:0,DeliveryTime:"",Remark:""},t=dataTableConfig([i]);t.addColumns([{data:"TaskOrder",title:"任务单",render:tableSet.addInput.bind(null,"taskOrder","auto")},{data:"WorkOrderId",title:"工单",render:tableSet.addSelect.bind(null,setOptions(r,"WorkOrder"),"workOrder")},{data:"TargetWork",title:"目标产量",sClass:"targetWork"},{data:"Left",title:"未完成",sClass:"text-red left"},{data:"Doing",title:"加工中",sClass:"text-orange doing"},{data:"ProductId",title:"计划号",render:tableSet.addSelect.bind(null,setOptions(u,"Product"),"product")},{data:"Target",title:"目标产量",render:tableSet.addInput.bind(null,"target","auto")},{data:"DeliveryTime",title:"交货日期",render:tableSet.addDay.bind(null,"deliveryTime")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);t.createdRow=n=>{initDayTime(n),$(n).find(".product").select2({matcher}).val(0).trigger("change"),$(n).find(".workOrder").select2({matcher}).val(0).trigger("change")};$("#addTaskOrderList").DataTable(t);$("#addTaskOrderListBtn").off("click").on("click",()=>addDataTableTr("#addTaskOrderList",i));$("#addTaskOrderModel").modal("show")})}}function addTaskOrder(n=false){addTableRow("#addTaskOrderList",getTaskOrderTrInfo,5092,()=>{getListNoCover(getTaskOrderList),n&&$("#addTaskOrderModel").modal("hide")})}function delTaskOrder(){delTableRow(_taskOrderTrs,5093,()=>{getListNoCover(getTaskOrderList)})}function showCapacityNeedModel(){$(`#capacityTaskDetailListDiv`).addClass("hidden");$(`#capacityTaskDetailListDiv strong`).text("");$(`#capacityTaskDevPerDiv`).addClass("hidden");getListNoCover(getTaskOrderList,n=>{var t=n.reduce((n,t)=>`${n}<div class="flexStyle pointer choseBox">
                            <label class="flexStyle pointer">
                                <input type="checkbox" class="icb_minimal" value="${t.Id}" cid="${t.CapacityId}" task="${t.TaskOrder}">
                                <span class="textOverTop" style="margin-left: 5px">${t.TaskOrder}-<span class="text-blue">${t.Product}</span>-<span class="text-red">${t.Target}</span></span>
                            </label>
                            <button type="button" class="btn btn-primary btn-xs hidden chose" style="margin-left: 5px">选择</button>
                        </div>`,"");$("#capacityTaskCheck").empty().append(t);$(`#capacityTaskCheck .icb_minimal`).iCheck({handle:"checkbox",checkboxClass:"icheckbox_minimal-green",increaseArea:"20%"});$("#capacityTaskCheck").on("ifChanged",".icb_minimal",function(){const n=$(this),t=n.val().trim()>>0;n.is(":checked")?(_capacityNeed[t]={Id:t,Needs:[]},n.closest("label").siblings(".chose").removeClass("hidden")):(delete _capacityNeed[t],n.closest("label").siblings(".chose").addClass("hidden"));_capacityNeedCurrentTaskId=0;$(`#capacityTaskDetailListDiv`).addClass("hidden");$(`#capacityTaskDevPerDiv`).addClass("hidden")});$("#capacityTaskCheck").on("click",".chose",function(){const n=$(this).siblings("label").find(".icb_minimal");_capacityNeedCurrentTaskId=$(n).val().trim()>>0;const t=$(n).attr("cid").trim()>>0,i=$(n).attr("task").trim();_capacityNeedCurrentTaskId!=0&&($(`#capacityTaskDevPerDiv`).addClass("hidden"),showCapacityTaskChose(t,i))});$("#capacityNeedModel").modal("show")},0,!1)}function showCapacityTaskChose(n,t){$(`#capacityTaskDetailListDiv strong`).text(`${t}`);$(`#capacityTaskDetailListDiv`).removeClass("hidden");getCapacitySetList({capacityId:n},n=>{n.datas.forEach(n=>{_capacityNeed[_capacityNeedCurrentTaskId].Needs[n.Id]||(_capacityNeed[_capacityNeedCurrentTaskId].Needs[n.Id]={Id:n.Id,DeviceList:[],OperatorList:[]})});const t=dataTableConfig(n.datas);t.addColumns([{data:"Process",title:"流程"},{data:null,title:"设备/人员",render:n=>`<button class="btn btn-info btn-sm capacity-btn" value="${n.Id}" process="${n.ProcessId}" p="${n.Process}">选择</button>`},{data:null,title:"是否选择",render:n=>{const t=_capacityNeed[_capacityNeedCurrentTaskId].Needs[n.Id].DeviceList,i=_capacityNeed[_capacityNeedCurrentTaskId].Needs[n.Id].OperatorList;var r=!0;return t&&t.length!=0||i&&i.length!=0||(r=!1),tableSet.isChose(r)}}]);_capacityTaskDetailList=$("#capacityTaskDetailList").DataTable(t);$("#capacityTaskDetailList").off("click").on("click",".capacity-btn",function(){let n=$(this).val()>>0;if(_capacityNeedCurrentPId=n,_capacityNeedCurrentPId!=0){var i=$(this).attr("p");const t={};t["qId"]=n;myPromise(5564,t,0).then(n=>{n.Process=i,_capacityTaskDeviceTrs=[],_capacityTaskOperatorTrs=[],devAndPersonInputInit("#devCapacityTaskSetList","#personCapacityTaskSetList"),deviceOperatorCapacityTaskTable(n,!0)});$("#capacitySetBtn").addClass("hidden")}})},0)}function capacityTaskSet(n=true){const t=(n,t)=>{if(_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t]||(_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t]=[]),n.length==0){_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t]=[];return}var i=[];n.forEach(n=>{const u=$(n);var r=u.find(".isEnable").val().trim()>>0,f=u.find(".single").text().trim()>>0,e=u.find(".sCount").text().trim()>>0;r>0&&(f*e>0?(i[r]=r,_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t][r]={id:r,single:f,sCount:e}):delete _capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t][r])});const r=[];_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t].forEach(n=>{r.push(n.id)});r.forEach(n=>{i[n]||delete _capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId][t][n]})};n?t(_capacityTaskDeviceTrs,"DeviceList"):t(_capacityTaskOperatorTrs,"OperatorList");let i=$(`#capacityTaskDetailList [value=${_capacityNeedCurrentPId}]`).closest("tr").find(".glyphicon");_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId].DeviceList.length>0||_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId].OperatorList.length>0?$(i).closest("tr").find(".glyphicon").addClass("glyphicon-ok text-green").removeClass("glyphicon-remove text-red"):$(i).closest("tr").find(".glyphicon").addClass("glyphicon-remove text-red").removeClass("glyphicon-ok text-green")}function deviceOperatorCapacityTaskTable(n){$(`#capacityTaskDevPerDiv`).removeClass("hidden");$(`#capacityTaskDevPerDiv strong`).text(n.Process);n.Devices.forEach(n=>(n.Id=n.ModelId,n));const r=n.Devices,t=dataTableConfig(r,!0);t.addColumns([{data:"Category",title:"设备类型"},{data:"Model",title:"设备型号"},{data:"Count",title:"设备数量",sClass:"count"},{data:"Single",title:"单次加工",sClass:"single"},{data:"Rate",title:"合格率(%)",sClass:"rate"},{data:"WorkTime",title:"总工时",sClass:"workTime"},{data:"ProductTime",title:"单次工时",sClass:"productTime"},{data:"SingleCount",title:"日加工次数",sClass:"sCount"},{data:"Number",title:"单台日产能",sClass:"number"},{data:"Total",title:"日总产能",sClass:"total"}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_capacityTaskDeviceTrs,capacityTaskSet,capacityTaskSet,!1)};t.createdRow=function(n,t){var r=t.Id;const i=_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId];$(n).find(".isEnable").iCheck(i&&i.DeviceList&&i.DeviceList[r]?"check":"uncheck")};$("#devCapacityTaskSetList").DataTable(t);r.length?$("#devCapacityTaskSetBox").removeClass("hidden"):$("#devCapacityTaskSetBox").addClass("hidden");n.Operators.forEach(n=>(n.Id=n.LevelId,n));const u=n.Operators,i=dataTableConfig(u,!0);i.addColumns([{data:"Level",title:"等级"},{data:"Count",title:"员工数量",sClass:"count"},{data:"Single",title:"单次加工",sClass:"single"},{data:"Rate",title:"合格率",sClass:"rate"},{data:"WorkTime",title:"总工时",sClass:"workTime"},{data:"ProductTime",title:"单次工时",sClass:"productTime"},{data:"SingleCount",title:"日加工次数",sClass:"sCount"},{data:"Number",title:"单台日产能",sClass:"number"},{data:"Total",title:"日总产能",sClass:"total"}]);i.drawCallback=function(){var n=()=>{capacityTaskSet(!1)};initCheckboxAddEvent.call(this,_capacityTaskOperatorTrs,n,n,!1)};i.createdRow=function(n,t){var r=t.Id;const i=_capacityNeed[_capacityNeedCurrentTaskId].Needs[_capacityNeedCurrentPId];$(n).find(".isEnable").iCheck(i&&i.OperatorList&&i.OperatorList[r]?"check":"uncheck")};$("#personCapacityTaskSetList").DataTable(i)}function getCapacityNeedParams(){if(_capacityTasks=[],_capacityTaskProcessListInit){const n=getDataTableRow("#capacityTaskProcessList");for(let t=0,i=n.length;t<i;t++){const i=$(n[t]),r=i.attr("tid").trim()>>0;if(_capacityNeed[r]){const t=i.find(".target"),u=i.find(".doneTarget"),f=i.find(".put"),e=i.find(".havePut"),n=i.find(".stock");n.each((n,t)=>{let i=$(t);const u=i.attr("cid").trim()>>0;_capacityNeed[r].Needs[u].Stock=i.val().trim()>>0})}}}const n=Object.values(_capacityNeed);n.length&&n.forEach(n=>{const t=deepCopy(n);t.Needs=Object.values(t.Needs);t.Needs.forEach(n=>{n.DeviceList&&(n.DeviceList=Object.values(n.DeviceList)),n.OperatorList&&(n.OperatorList=Object.values(n.OperatorList)),n.DeviceList&&(n.Devices=n.DeviceList.map(n=>`${n.id},${n.single},${n.sCount}`).join()),n.OperatorList&&(n.Operators=n.OperatorList.map(n=>`${n.id},${n.single},${n.sCount}`).join())});_capacityTasks.push(t)})}function updateCapacityNeedParams(n){n.forEach(n=>{const t=n.Id;_capacityNeed[t]&&(_capacityNeed[t].Needs||(_capacityNeed[t].Needs=[]),n.Needs.forEach(n=>{_capacityNeed[t].Needs[n.Id]?_capacityNeed[t].Needs[n.Id].Stock=n.Stock:_capacityNeed[t].Needs[n.Id]={Id:n.Id,Stock:n.Stock}}))})}function showCapacityTaskProcess(n=true){if(getCapacityNeedParams(),!_capacityTasks.length)return layer.msg("请选择任务单");const t=n=>{const r=n.datas;r.length>0&&(_capacityTaskProcessListInit=!0);updateCapacityNeedParams(r);const a=(n,t,i,r)=>`<div class="table-responsive mailbox-messages">
                        <table class="table table-hover table-striped table-bordered" id="capacityTaskProcessList">
                            <thead>
                                <tr>
                                    <th rowspan="2">序号</th>
                                    <th rowspan="2">任务单</th>
                                    <th rowspan="2">计划号</th>
                                    <th rowspan="2">数量</th>${n}
                                </tr>
                                <tr>${'<th class="bg-blue">总计<\/th><th class="bg-green">库存<\/th><th class="bg-yellow">需生产<\/th><th>需投料<\/th><th class="bg-yellow">设备<\/th><th>需要<\/th><th>已有<\/th><th class="bg-yellow">人员<\/th><th>需要<\/th><th>已有<\/th>'.repeat(t)}</tr>
                            </thead>
                            <tbody>
                                ${i}
                            </tbody>
                            <tfoot>
                                ${r}
                            </tfoot>
                        </table>
                    </div>`,t=n.Orders.sort(sortOrder),v=t.reduce((n,t,i)=>`${n}<th colspan="10" ${i%2?"":'class="bg-gray"'}>${t.Process}</th>`,"");let u=[],f=[],e=[],o=[],s=[];const y=r.reduce((n,i,r)=>{u[0]=(u[0]>>0)+i.Target;const c=i.Needs.sort(sortOrder),h={};c.forEach(n=>{h[n.Order]=n});const l=t.reduce((n,t,i)=>{const r=h[t.Order];return f[i]=(f[i]>>0)+r.Target+r.Stock,e[i]=(e[i]>>0)+r.Stock,o[i]=(o[i]>>0)+r.Target,s[i]=(s[i]>>0)+r.Put,r?`${n}
                          <td class="bg-blue">${r.Target+r.Stock}</td>
                          <td class="bg-green">
                             <input type="text" class="form-control text-center stock"
                                value="${r.Stock}" cid="${r.Id}" order="${t.Order}" pid="${r.PId}" processid="${r.ProcessId}" productid="${r.ProductId}" style="width:50px;margin:auto;padding:inherit">
                          </td>
                          <td class="bg-yellow target">${r.Target}</td>
                          <td><strong class="text-green put">${r.Put}</strong> (${r.Rate}%)</td>
                          <td class="bg-yellow"><strong>${r.DCapacity}</strong></td>
                          <td><strong${r.NeedDCapacity<r.HaveDCapacity?"":' class="text-red"'}>${r.NeedDCapacity}</strong></td>
                          <td><strong>${r.HaveDCapacity}</strong></td>
                          <td class="bg-yellow"><strong>${r.OCapacity}</strong></td>
                          <td><strong${r.NeedOCapacity<r.HaveOCapacity?"":' class="text-red"'}>${r.NeedOCapacity}</strong></td>
                          <td><strong>${r.HaveOCapacity}</strong></td>`:`${n}<td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>`},"");return`${n}<tr tid="${i.Id}">
                        <td>${r+1}</td>
                        <td>${i.Arranged?i.TaskOrder:`<strong class="text-red">${i.TaskOrder}</strong>`}</td>
                        <td>${i.Product}</td>
                        <td>${i.Target}</td>${l}
                    </tr>`},""),p=t.reduce((n,t,i)=>`${n}<td class="bg-blue">${f[i]}</td>
                 <td class="bg-green">${e[i]}</td>
                 <td class="bg-yellow">${o[i]}</td>
                 <td><strong class="text-green">${s[i]}</strong></td>
                 <td></td><td></td><td></td><td></td><td></td><td></td>`,`<td>总计</td><td></td><td></td><td>${u[0]}</td>`);let i=0;t.forEach(n=>{i=Math.max(n.Devices.length,i),i=Math.max(n.Operators.length,i)});let h=`<tr>
                ${p}
            </tr>`+(i==0?``:`<tr>
                    <th></th><th></th><th></th><th>${'<th class="bg-gray text-red">型号<\/th><th class="bg-gray">需求<\/th><th class="bg-gray">现有<\/th><th class="bg-gray">班次<\/th><th><\/th><th class="bg-gray text-red">等级<\/th><th class="bg-gray">需求<\/th><th class="bg-gray">现有<\/th><th class="bg-gray">班次<\/th><th><\/th>'.repeat(t.length)}
                </tr>`);const c=n=>n?`<td>${n.Name}</td><td><strong class=${n.NeedCapacity>n.HaveCapacity?"text-red":"text-green"}>${n.NeedCapacity}</strong</td><td>${n.HaveCapacity}</td><td>${n.Times}</td><td></td>`:`<td></td><td></td><td></td><td></td><td></td>`;for(let n=0;n<i;n++)h+=`<tr>
                        <td></td><td></td><td></td><td></td>
                        ${t.reduce((t,i)=>t+c(i.Devices[n])+c(i.Operators[n]),``)}
                    </tr>`;const w=a(v,t.length,y,h);$("#capacityTaskProcessListBox").html(w).find("th,td").css("padding","4px").end().find("th,td").css("border","1px solid black").end().find("tbody .bg-green").css("padding",0);var l=dataTableConfig(0);l.fixedHeaderColumn(!0,4,0);$("#capacityTaskProcessList").DataTable(l)};myPromise(5094,_capacityTasks,n).then(t)}function getPmcChildList(){const i=$("#wsSelect").val()>>0,n=$("#pmcChildSTime").val();if(isStrEmptyOrUndefined(n))return layer.msg("请选择开始时间");const t=$("#pmcChildETime").val();if(isStrEmptyOrUndefined(t))return layer.msg("请选择结束时间");if(!comTimeDay(n,t)){const r=$("#pmcChildDTime").val(),u=$("#pmcChildAll").is(":checked");myPromise(5606,{wId:i,startTime:n,endTime:t,deliveryTime:r,all:u},!0).then(n=>pmcChildCreate(n))}}function pmcChildCreate(n){const t="#pmcChildList";if($(t).html(""),n.errno!=0)return void layer.msg(n.errmsg);const r="pmcChildTable",u=n.Orders.reduce((t,i)=>{var c,l,a,v,y,f,p,u;const w=exchangeDateArray(n.StartTime,n.EndTime),b=w.reduce((n,t,i)=>`${n}<th colspan="4" ${i%2==0?'class="bg-gray"':""}>${monthDay(t)}</th>`,""),e=[],o=[],h=[],s=[];for(c=[],l=n.datas,f=0;f<l.length;f++)a=l[f],a.PId==i.Id&&c.push(a);for(v=[],y=n.Indexes,f=0;f<y.length;f++)p=y[f],p.PId==i.Id&&v.push(p);u=0;const k=Object.values(c).reduce((n,t,r)=>{const y=t.Schedules.reduce((n,r,u)=>{u++;const c=r.Put,l=r.HavePut;e[u]=(e[u]>>0)+c;o[u]=(o[u]>>0)+l;const a=r.Target,v=r.DoneTarget;h[u]=(h[u]>>0)+a;s[u]=(s[u]>>0)+v;const f=(n,u,f="white")=>u>0?`<a href="javascript: showPmcChildPlanModal('${r.ProcessTime}', ${r.Id}, 0, 0, '${t.Product}', '${i.Process}', ${n});" style="color:${f}">${u}</a>`:`${u}`;return`${n}
                            <td class="bg-green">${f(5607,c)}</td>
                            <td>${f(5607,l,l<c?"red":"green")}</td>
                            <td class="bg-green">${f(5608,a)}</td>
                            <td>${f(5608,v,v<a?"red":"green")}</td>`},""),c=t.Put,l=t.HavePut;e[u]=(e[u]>>0)+c;o[u]=(o[u]>>0)+l;const a=t.Target,v=t.DoneTarget;h[u]=(h[u]>>0)+a;s[u]=(s[u]>>0)+v;const f=(n,r,u="white")=>r>0?`<a href="javascript: showPmcChildPlanModal(undefined, 0, ${t.TaskOrderId}, ${t.PId}, '${t.Product}', '${i.Process}', ${n});" style="color:${u}">${r}</a>`:`${r}`;return`${n}<tr>
                            <td>${r+1}</td>
                            <td>${t.TaskOrder}</td>
                            <td>${t.Product}</td>
                            <td>${monthDay(t.DeliveryTime)}</td>
                            <td class="bg-yellow">${f(5607,c)}</td>
                            <td>${f(5607,l,l<c?"red":"green")}</td>
                            <td class="bg-yellow">${f(5608,a)}</td>
                            <td>${f(5608,v,v<a?"red":"green")}</td>${y}
                        </tr>`},""),d=e.reduce((n,t,i)=>`${n}<td class="bg-${i!==0?"green":"yellow"}">${e[i]}</td><td ${o[i]==0?'class="text-black"':o[i]<e[i]?'class="text-red"':'class="text-green"'}>${o[i]}</td>
                                                      <td class="bg-${i!==0?"green":"yellow"}">${h[i]}</td><td ${s[i]==0?'class="text-black"':s[i]<h[i]?'class="text-red"':'class="text-green"'}>${s[i]}</td>`,""),g=(n,t="white")=>n.Index>0?`<a href="javascript: showPmcChildIndexModal('${n.ProcessTime}', ${n.PId}, '${i.Process}')" style="color:${t}">${n.Index*100}%</a>`:`${n.Index*100}%`,nt=v.reduce((n,t)=>`${n}<td class="bg-green">${g(t)}</td><td>0</td><td></td><td></td>`,"");return`${t}<div class="form-group">
                        <label class="control-label">${i.Process}：</label>
                        <div class="table-responsive">
                            <table class="table table-hover table-striped table-bordered ${r}">
                                <thead>
                                    <tr>
                                        <th rowspan="2">序号</th>
                                        <th rowspan="2">任务单</th>
                                        <th rowspan="2">计划号</th>
                                        <th rowspan="2">交货日期</th>
                                        <th colspan="2" class="bg-gray">投料合计</th>
                                        <th colspan="2">入库合计</th>${b}
                                    </tr>
                                    <tr><th class="bg-yellow">计划</th><th>实际</th><th class="bg-yellow">计划</th><th>实际</th>${'<th class="bg-green">投料<\/th><th>实际<\/th><th class="bg-green">入库<\/th><th>实际<\/th>'.repeat(w.length)}</tr>
                                </thead>
                                <tbody>
                                    ${k}
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>总计</th><th></th><th></th><th></th>${d}
                                    </tr>
                                    <tr>
                                        <th>利用率</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th>${nt}
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                     </div>`},"");$(t).html(u).find("th,td").css("padding","4px").end().find("th,td").css("border","1px solid gray").end().find("th,td").css("width","auto");var i=dataTableConfig(0);i.fixedHeaderColumn(!0,8,0);$("#pmcChildList .pmcChildTable").DataTable(i)}function showPmcChildPlanModal(n,t,i,r,u,f,e,o=[]){const a=$("#wsSelect").val()>>0;if(a!==0){n==undefined?$("#pmcChildPlanTimeBox").addClass("hidden"):($("#pmcChildPlanTimeBox").removeClass("hidden"),$("#pmcChildPlanTime").text(monthDay(n)));let s="Put",h="HavePut",v=`${f}投料详情`,c="#pmcChildPlanList0",l="#pmcChildPlanList1";e!=5607&&(s="Target",h="DoneTarget",v=`${f}入库详情`,c="#pmcChildPlanList1",l="#pmcChildPlanList0");$(c).removeClass("hidden");$(l).addClass("hidden");$(c).closest("div .dataTables_wrapper").removeClass("hidden");$(l).closest("div .dataTables_wrapper").addClass("hidden");$("#showPmcChildPlanModal .modal-title").text(v);const y=n=>{const t=dataTableConfig(n);t.addColumns([{data:"ProcessTime",title:"时间",render:n=>monthDay(n)},{data:"TaskOrder",title:"任务单"},{data:null,title:"计划号",render:()=>u},{data:s,title:"计划",sClass:"bg-green"},{data:h,title:"实际"}]);t.createdRow=function(n,t){const i=t[s],r=t[h],u=i>r?"red":"green";$("td",n).eq(5).css("font-weight","bold").css("color",u)};e===5607&&t.addColumns([{data:null,title:"安排",render:n=>Object.values(n.Arranges).map(n=>"{0}:{1}次".format(n.Item1,n.Item2)).join()}]);t.initComplete=function(){if(this.find("tfoot").remove(),n.length){let t=0,i=0;n.forEach(n=>{t+=n[s],i+=n[h]});let r="";r=e===5607?`<tfoot>
                              <tr>
                                <th>总计</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>${t}</th>
                                <th>${i}</th>
                                <th></th>
                              </tr>
                           </tfoot>`:`<tfoot>
                              <tr>
                                <th>总计</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>${t}</th>
                                <th>${i}</th>
                              </tr>
                           </tfoot>`;this.append(r).find("tfoot tr:last th").css("borderTop",0)}};$(c).DataTable(t);$("#showPmcChildPlanModal").modal("show")};if(o.length>0){y(o);return}myPromise(e,{wId:a,time:n,id:t,taskOrderId:i,pId:r},0).then(n=>{const t=n.datas;y(t)})}}function showPmcChildIndexModal(n,t,i){const e=$("#wsSelect").val()>>0,r="#showPmcChildIndexModal",o=`${i}指数详情`,u="#pmcChildIndexList0",f="#pmcChildIndexList1";$(`${r} .modal-title`).text(o);myPromise(5609,{wId:e,time:n,pId:t},0).then(t=>{const h=t.datas;let i=[],e=[];h.forEach(n=>{n.ProductType==0?i.push(n):n.ProductType==1&&e.push(n)});$(u).empty();const o=dataTableConfig(i);o.addColumns([{data:null,title:"时间",render:()=>monthDay(n)},{data:"Code",title:"设备"},{data:null,title:"指数",render:()=>1},{data:"Index",title:"安排"}]);o.initComplete=function(){if(this.find("tfoot").remove(),i.length){let n=0,t=0;i.forEach(i=>{n+=1,t+=i.Index});let r=`<tfoot>
                              <tr>
                                <th>总计</th>
                                <th></th>
                                <th></th>
                                <th>${n}</th>
                                <th>${t}</th>
                              </tr>
                           </tfoot>`;this.append(r).find("tfoot tr:last th").css("borderTop",0)}};$(u).DataTable(o);$(f).empty();const s=dataTableConfig(e);s.addColumns([{data:null,title:"时间",render:()=>monthDay(n)},{data:"Name",title:"人员"},{data:null,title:"指数",render:()=>1},{data:"Index",title:"安排"}]);s.initComplete=function(){if(this.find("tfoot").remove(),e.length){let n=0,t=0;e.forEach(i=>{n+=1,t+=i.Index});let i=`<tfoot>
                              <tr>
                                <th>总计</th>
                                <th></th>
                                <th></th>
                                <th>${n}</th>
                                <th>${t}</th>
                              </tr>
                           </tfoot>`;this.append(i).find("tfoot tr:last th").css("borderTop",0)}};$(f).DataTable(s);$(`${r}`).modal("show")})}function getNotArrangeTaskListReset(){getNotArrangeTaskList()}function notArrangeTaskListTimeReset(){$("#notArrangeTaskList .form_date").val("");$("#notArrangeTaskList .form_date").datepicker("update");getPmcPreviewParams()}function getNotArrangeTaskList(){const n=$("#wsSelect").val()>>0;n!==0&&myPromise(5601,{wId:n},0).then(n=>{n=n.datas;const t={};n.forEach(n=>t[n.Id]=n);$("#notArrangeTaskList").off("change").on("change",".taskOrder",function(){const r=$(this).val(),u=$(_notArrangeTaskListTable.columns(1).nodes()[0]).find(".taskOrder"),f={};for(let n=0,t=u.length;n<t;n++){const i=u.eq(n),r=i.find("option[disabled]");r.prop("disabled",!1);const t=i.val();r.prop("disabled",!0);isStrEmptyOrUndefined(t)||(f[t]=_pmcPreviewParams[t]||{Id:+t})}_pmcPreviewParams=f;const n=t[r],i=$(this).closest("tr");i.find("td").eq(2).text(n?n.Product:"");i.find("td").eq(3).text(n?n.Target:"");i.find("td").eq(4).text(n?n.DeliveryTime.split(" ")[0]:"");initDayTime(i);r&&disabledPmcTask(r);setNotArrangeTaskWork($(this).closest("tr"));const e=$("#pmcChildAuto").is(":checked");e&&!_pmcChildAutoWait&&getTaskProcessList(0)});$("#notArrangeTaskList").off("changeDate").on("changeDate",".form_date",function(){setNotArrangeTaskWork($(this).closest("tr"));getPmcPreviewParams();const n=$("#pmcChildAuto").is(":checked");n&&!_pmcChildAutoWait&&getTaskProcessList(0)});if(_notArrangeTaskListTable==null){const i={Product:"",Target:"",DeliveryTime:"",StartTime:"",EndTime:"",EstimatedTime:""},t=dataTableConfig();t.addColumns([{data:null,title:"任务单",render:tableSet.addSelect.bind(null,setOptions(n,"TaskOrder"),"taskOrder")},{data:"Product",title:"计划号"},{data:"Target",title:"数量"},{data:"DeliveryTime",title:"交货时间",render:n=>n.split(" ")[0]},{data:"StartTime",title:"开始时间",render:tableSet.addDay.bind(null,"startTime")},{data:"EndTime",title:"截止时间",render:tableSet.addDay.bind(null,"endTime")},{data:null,title:"工期",render:()=>"",sClass:"workDay"},{data:null,title:"删除",render:()=>`<button class="btn btn-danger btn-xs del-btn"><i class="fa fa-minus"></i></button>`}]);t.createdRow=n=>{$(n).find(".taskOrder").select2({matcher}).val(0).trigger("change"),initDayTime(n)};_notArrangeTaskListTable=$("#notArrangeTaskList").DataTable(t);$("#addNotArrangeTaskListBtn").off("click").on("click",function(){addDataTableTr("#notArrangeTaskList",i);disabledPmcTask();n.length===_notArrangeTaskListTable.column(1).nodes().length&&$(this).prop("disabled",!0)}).prop("disabled",!n.length)}else{const t=setOptions(n,"TaskOrder");_pmcChildAutoWait=!0;updateDataTableTrSelect("#notArrangeTaskList","taskOrder",t);_pmcChildAutoWait=!1;getTaskProcessList(0)}})}function setNotArrangeTaskWork(n){const t=n.find(".startTime").val().trim(),i=n.find(".endTime").val().trim();if(t&&i){const r=(new Date(i)-new Date(t))/864e5;n.find(".workDay").text(r+1)}}function disabledPmcTask(n,t=true){const i=$(_notArrangeTaskListTable.columns(1).nodes()[0]).find(".taskOrder");disabledOption(i,n,t)}function updatePmcPreviewParams(n){n.forEach(n=>{const t={Id:n.Id,Order:n.Order,Needs:n.Needs.map(n=>({Order:n.Order,TaskOrderId:n.TaskOrderId,ProcessId:n.ProcessId,PId:n.PId,ProductId:n.ProductId,Target:n.Target,DoneTarget:n.DoneTarget,Put:n.Put,HavePut:n.HavePut,Stock:n.Stock}))};n.StartTime!="0001-01-01 00:00:00"&&(t.StartTime=n.StartTime);n.EndTime!="0001-01-01 00:00:00"&&(t.EndTime=n.EndTime);_pmcPreviewParams[n.Id]=t});_taskOrders=Object.values(_pmcPreviewParams)}function getPmcPreviewParams(n=false,t=true){if(!n){t&&$("#pmcPreviewProcessBtn").html("");_pmcPreviewParams={};let n=getDataTableRow("#arrangeTaskList"),i=_arrangeTaskListTable;for(let t=0,r=n.length;t<r;t++){const e=$(n[t]),o=i.row(e).data(),r=o.Id,s=o.TaskOrder,u=e.find(".startTime").val().trim(),f=e.find(".endTime").val().trim();if(_pmcPreviewParams[r]||(_pmcPreviewParams[r]={Id:r,TaskOrder:s}),_pmcPreviewParams[r].Order=t,u?_pmcPreviewParams[r].StartTime=u:delete _pmcPreviewParams[r].StartTime,f?_pmcPreviewParams[r].EndTime=f:delete _pmcPreviewParams[r].EndTime,u&&f&&compareDate(u,f))return _taskOrders=Object.values(_pmcPreviewParams),"截止时间不能小于开始时间"}n=getDataTableRow("#notArrangeTaskList");for(let t=0,i=n.length;t<i;t++){const f=$(n[t]),e=f.find(".taskOrder"),o=e.find("option[disabled]");o.prop("disabled",!1);const i=e.val(),s=e.find(`option[value=${i}]`).text();if((o.prop("disabled",!0),!isStrEmptyOrUndefined(i))&&!_pmcPreviewParams[i]){const r=f.find(".startTime").val().trim(),u=f.find(".endTime").val().trim();if(_pmcPreviewParams[i]||(_pmcPreviewParams[i]={Id:i,TaskOrder:s}),_pmcPreviewParams[i].Order=t,r?_pmcPreviewParams[i].StartTime=r:delete _pmcPreviewParams[i].StartTime,u?_pmcPreviewParams[i].EndTime=u:delete _pmcPreviewParams[i].EndTime,r&&u&&compareDate(r,u))return _taskOrders=Object.values(_pmcPreviewParams),"截止时间不能小于开始时间"}}}const i=$("#notArrangeTaskProcess").length;if(i>0){const t=getDataTableRow("#notArrangeTaskProcess");if(n&&t.length!=_taskOrders.length)return"缺少工序加工数量数据，请重新查询！";for(let n=0,i=t.length;n<i;n++){const i=$(t[n]),r=i.attr("tid").trim()>>0;if(_pmcPreviewParams[r]){const t=i.find(".target"),u=i.find(".doneTarget"),f=i.find(".put"),e=i.find(".havePut"),o=i.find(".stock");let n=[];o.each((i,o)=>{let s=$(o);n.push({Order:s.attr("order").trim()>>0,TaskOrderId:r,ProcessId:s.attr("processid").trim()>>0,PId:s.attr("pid").trim()>>0,ProductId:s.attr("productid").trim()>>0,Target:$(t[i]).text().trim()>>0,DoneTarget:$(u[i]).text().trim()>>0,Put:$(f[i]).text().trim()>>0,HavePut:$(e[i]).text().trim()>>0,Stock:s.val().trim()>>0})});_pmcPreviewParams[r].Needs=n}}}_taskOrders=Object.values(_pmcPreviewParams)}function getArrangeTaskList(){const n=$("#wsSelect").val()>>0;if(n!==0){const t=myPromise(5590,{wId:n,menu:!0},0),i=myPromise(5600,{wId:n},0);Promise.all([t,i]).then(n=>{const i=n[0].datas,t=n[1].datas;if(_arrangeTask=[],_arrangeTaskListTable==null){const n=dataTableConfig(t);n.addColumns([{data:null,title:"等级",render:tableSet.addSelect.bind(null,setOptions(i,"Level"),"level")},{data:"StateStr",title:"状态"},{data:"TaskOrder",title:"任务单"},{data:"Product",title:"计划号"},{data:"Target",title:"数量"},{data:"DoneTarget",title:"已完成"},{data:"DeliveryTime",title:"交货时间",render:tableSet.showTime},{data:"StartTime",title:"开始时间",render:tableSet.addDay.bind(null,"startTime")},{data:"EndTime",title:"截止时间",render:tableSet.addDay.bind(null,"endTime")},{data:"CostDay",title:"工期",render:n=>n||"",sClass:"workDay"}]);n.createdRow=(n,t)=>{$(n).find(".level").val(t.LevelId),initDayTime(n,t.StartTime,getPmcPreviewParams)};n.drawCallback=()=>{};_arrangeTaskListTable=$("#arrangeTaskList").DataTable(n);$("#arrangeTaskList").off("onSelectDate").on("onSelectDate",".form_date",function(){})}else updateTable(_arrangeTaskListTable,t)})}}function setArrangeTaskList(){const t=Array.from(getDataTableRow("#arrangeTaskList")),i=_arrangeTaskListTable,n=[];for(let r=0,u=t.length;r<u;r++){const u=t[r],s=i.row(u).data(),f=$(u).find(".level").val();if(isStrEmptyOrUndefined(f))return void layer.msg("请选择等级");const e=$(u).find(".startTime").val();if(isStrEmptyOrUndefined(e))return layer.msg("请选择开始时间");const o=$(u).find(".endTime").val();if(isStrEmptyOrUndefined(o))return layer.msg("请选择结束时间");n[r]={StartTime:e,EndTime:o,LevelId:f,Id:s.Id}}if(!n.length)return layer.msg("请设置任务单");myPromise(5603,n)}function getTaskProcessList(n=true){const t=$("#wsSelect").val()>>0;if(t!==0){const r=getPmcPreviewParams();if(!isStrEmptyOrUndefined(r))return layer.msg(r);if(!_taskOrders.length)return layer.msg("请选择任务单");_isGetPmcPreviewParams=!0;const i=$("#notArrangeTaskProcessBox .fa-plus").length>0,u=n=>{const r=n.datas;updatePmcPreviewParams(r);const o=(n,t,r)=>`<div class="box box-primary${i?" collapsed-box":""}">
                        <div class="box-header no-padding-left">
                            <label class="control-label text-red">任务单各工序数量：</label>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa ${i?"fa-plus":"fa-minus"}"></i></button>
                            </div>
                        </div>
                        <div class="box-body" style="display:${i?"none":"block"}>
                            <div class="form-group">
                                <div class="table-responsive1 mailbox-messages">
                                    <table class="table table-hover table-striped table-bordered" id="notArrangeTaskProcess">
                                        <thead>
                                            <tr>
                                                <th rowspan="2">序号</th>
                                                <th rowspan="2">任务单</th>
                                                <th rowspan="2">计划号</th>${n}
                                            </tr>
                                            <tr>${'<th class="bg-blue">总计<\/th><th class="bg-green">库存<\/th><th class="bg-yellow">需生产<\/th><th>需投料<\/th><th class="bg-yellow">已完成<\/th><th>已投料<\/th>'.repeat(t)}</tr>
                                        </thead>
                                        <tbody>${r}</tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>`,f=n.Orders.sort(sortOrder),s=f.reduce((n,t,i)=>`${n}<th colspan="6" ${i%2?"":'class="bg-gray"'}>${t.Process}</th>`,""),h=r.sort(sortOrder).reduce((n,t,i)=>{const o=t.Id,u=t.Needs.sort(sortOrder),r={};u.forEach(n=>{r[n.Order]=n});const e=f.reduce((n,t)=>{const i=r[t.Order];return i?`${n}
                          <td class="bg-blue">${i.Target+i.Stock}</td>
                          <td class="bg-green">
                             <input type="text" class="form-control text-center stock"
                                value="${i.Stock}" order="${t.Order}" pid="${i.PId}" processid="${i.ProcessId}" productid="${i.ProductId}" style="width:50px;margin:auto;padding:inherit" onchange="getTaskProcessList(0)">
                          </td>
                          <td class="bg-yellow target">${i.Target}</td>
                          <td><strong class="text-red put">${i.Put}</strong> (${i.Rate}%)</td>
                          <td class="bg-yellow"><strong class="doneTarget">${i.DoneTarget}</strong></td>
                          <td><strong class="text-green havePut">${i.HavePut}</strong></td>`:`${n}<td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>
                          <td class="short-slab"><i></td>`},"");return`${n}<tr tid="${t.Id}">
                        <td>${i+1}</td>
                        <td>${t.Arranged?t.TaskOrder:`<strong class="text-red">${t.TaskOrder}</strong>`}</td>
                        <td>${t.Product}</td>${e}
                    </tr>`},""),c=o(s,f.length,h);$("#notArrangeTaskProcessBox").html(c).find("table").css("width","100%").find("th,td").css("padding","4px").end().find("th,td").css("border","1px solid black").end().find("tbody .bg-green").css("padding",0);var e=dataTableConfig(0);e.fixedHeaderColumn(!0,3,0);$("#notArrangeTaskProcess").DataTable(e);$("#notArrangeTaskProcessBox .DTFC_ScrollWrapper").css("height","auto");$("#setNotArrangeTaskProcessBtn").off("click").on("click",()=>{if(getPmcPreviewParams(),!_taskOrders.length)return layer.msg("请选择任务单");const n={WorkshopId:t,Previews:_taskOrders};myPromise(5602,n,0).then(n=>{updatePmcPreviewParams(r),u(n)})})};if(getPmcPreviewParams(),!_taskOrders.length)return layer.msg("请选择任务单");const f={WorkshopId:t,Previews:_taskOrders};myPromise(5602,f,n).then(u)}}function getPmcPreviewList(){const n=$("#wsSelect").val()>>0;if(n!==0){const t=getPmcPreviewParams(!0);if(!isStrEmptyOrUndefined(t))return layer.msg(t);if(_taskOrders.length==0)return"";const i={WorkshopId:n,Previews:!$("#notArrangeTaskProcessBox").html()?[]:_taskOrders};myPromise(5604,i).then(n=>{n&&n.Cost&&n.Cost.length>0&&(_isGetPmcPreviewParams=!1);const r=(t,i)=>`<div class="form-group">
                        <label class="control-label text-red">预计开始时间：${n.StartTime.split(" ")[0]}</label><br />
                        <label class="control-label text-red">产能指数：</label>
                        <div class="table-responsive1">
                            <table class="table table-hover table-striped table-bordered" id="pmcPreview">
                                <thead>
                                    <tr>
                                        <th rowspan="2" style="width: 40px">序号</th>
                                        <th rowspan="2" style="width: 82px">任务单</th>
                                        <th rowspan="2" style="width: 82px">计划号</th>
                                        <th rowspan="2" style="width: 82px">开始时间</th>
                                        <th rowspan="2" style="width: 82px">结束时间</th>
                                        <th rowspan="2" style="width: 82px">预计开始</th>
                                        <th rowspan="2" style="width: 82px">预计结束</th>
                                        <th rowspan="2" style="width: 50px">耗时</th>
                                        <th rowspan="2" style="width: 50px">逾期</th>${t}
                                    </tr>
                                    <tr>${'<th class="bg-yellow">设备<\/th><th>人员<\/th>'.repeat(n.Orders.length)}</tr>
                                </thead>
                                <tbody>${i}</tbody>
                            </table>
                        </div>
                      </div>`,t=n.Orders.sort(sortOrder),u=t.reduce((n,t,i)=>i%2==0?`${n}<th colspan="2" class="bg-gray">${t.Process}</th>`:`${n}<th colspan="2">${t.Process}</th>`,""),f=n.Cost.reduce((n,i,r)=>{const v=i.Id,c=i.CostDays.sort(sortOrder),h={};c.forEach(n=>{h[n.Order]=n});const l=t.reduce((n,t)=>{const i=h[t.Order];return i?`${n}<td class="bg-yellow">${i.DeviceDay}</td><td>${i.OperatorDay}</td>`:`${n}<td class="short-slab"><i></td><td class="short-slab"><i></td>`},""),f=i.EstimatedStartTime.split(" ")[0],e=i.EstimatedEndTime.split(" ")[0],a=Array.from(getDataTableRow("#notArrangeTaskList")),u=i.Id;a.forEach(n=>{n=$(n);const t=n.find(".taskOrder option[disabled]");t.prop("disabled",!1);const i=n.find(".taskOrder").val();t.prop("disabled",!0);i==u&&(isStrEmptyOrUndefined(n.find(".startTime").val())&&(n.find(".startTime").val(f).datepicker("update"),_pmcPreviewParams[u]&&(_pmcPreviewParams[u].StartTime=f)),isStrEmptyOrUndefined(n.find(".endTime").val())&&(n.find(".endTime").val(e).datepicker("update"),_pmcPreviewParams[u]&&(_pmcPreviewParams[u].EndTime=e)))});const o=i.StartTime.split(" ")[0],s=i.EndTime.split(" ")[0];return`${n}<tr>
                        <td>${r+1}</td>
                        <td>${i.TaskOrder}</td>
                        <td>${i.Product}</td>
                        <td>${validTime(o)?o:""}</td>
                        <td>${validTime(s)?s:""}</td>
                        <td${validTime(o)?compareDate(f,o)?' class="text-red"':"":""}>${f}</td>
                        <td${validTime(s)?compareDate(e,s)?' class="text-red"':"":""}>${e}</td>
                        <td>${i.CostDay}</td>
                        <td>${i.OverdueDay}</td>${l}
                    </tr>`},""),e=r(u,f);$("#pmcPreviewBox").html(e).find("table").css("width","100%").find("th,td").css("padding","4px").end().find("th,td").css("border","1px solid gray").end().find("th,td").css("width","auto");getPresentSchedule(n);var i=dataTableConfig(0);i.fixedHeaderColumn(!0,9,0);$("#pmcPreview").DataTable(i);$("#pmcPreviewBox .DTFC_ScrollWrapper").css("height","auto")})}}function getPresentSchedule(n){const i=$("#wsSelect").val()>>0;if(i!==0){var t="#pmcPreviewProcess";const r={wId:i,startTime:n.StartTime,endTime:n.EndTime};myPromise(5606,r,!0).then(i=>{var u,f,e;const r=[];for(u=0;u<n.Put.length;u++){const t=n.Put[u];for(r[t.TaskOrderId]||(r[t.TaskOrderId]=[]),f=0;f<t.Schedules.length;f++){const n=t.Schedules[f];r[t.TaskOrderId][n.ProcessTime]||(r[t.TaskOrderId][n.ProcessTime]=[]);r[t.TaskOrderId][n.ProcessTime][t.PId]||(r[t.TaskOrderId][n.ProcessTime][t.PId]=[]);r[t.TaskOrderId][n.ProcessTime][t.PId].push(n.Data)}}const o=n.Orders.reduce((t,r)=>{var f,u;const o=exchangeDateArray(n.StartTime,n.EndTime),h=o.reduce((n,t,i)=>`${n}<th colspan="2" ${i%2==0?'class="bg-gray"':""}>${monthDay(t)}</th>`,""),e=(n,t)=>{for(var r,u=[],i=0;i<n.length;i++)r=n[i],r.PId==t&&u.push(r);return u},c=(n,t)=>{for(var r,u=[],i=0;i<n.length;i++)r=n[i],r.PId==t&&u.push(r);return u};f=1;const l=(n,t,i,r,u)=>`<div class="form-group">
                        <label class="control-label">${t}：</label>
                        <div class="table-responsive">
                            <table class="table table-hover table-striped table-bordered pmcPreviewProcess ${n}">
                                <thead>
                                    <tr>
                                        <th rowspan="2" style="width: 40px">序号</th>
                                        <th rowspan="2" style="width: 100px">任务单</th>
                                        <th rowspan="2" style="width: 10px">计划号</th>
                                        <th rowspan="2" style="width: 100px">交货日期</th>
                                        <th colspan="2" class="bg-gray">合计</th>
                                        ${h.repeat(f)}
                                    </tr>
                                    <tr>
                                        <th class="bg-yellow">投料</th>
                                        <th>入库</th>
                                        ${'<th class="bg-green">投料<\/th><th>入库<\/th>'.repeat(o.length).repeat(f)}
                                    </tr>
                                </thead>
                                <tbody>
                                    ${i}
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>总计</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        ${r}
                                    </tr>
                                    <tr>
                                        <th>产能</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        ${u}
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>`;u=0;const a=(n,t,i,e)=>n.reduce((n,o,s)=>{const l=o.Schedules.reduce((n,u,f)=>{f++;const s=u.Put,h=u.Target;i[f]=(i[f]>>0)+s;e[f]=(e[f]>>0)+h;const c=(n,i="white")=>s>0?t===0?`<a href="javascript: showPmcChildPlanModal('${u.ProcessTime}', ${u.Id}, 0,0, '${o.Product}', '${r.Process}', 5607)" style="color:${i}";>${n}</a>`:`<a href="javascript:;" class="put" index="${o.PId}" tid="${o.TaskOrderId}" time="${u.ProcessTime}" product="${o.Product}" process="${r.Process}" style="color:${i}">${n}</a>`:`${n}`,l=(n,i="white")=>h>0?t===0?`<a href="javascript: showPmcChildPlanModal('${u.ProcessTime}', ${u.Id}, 0, 0, '${o.Product}', '${r.Process}', 5608)" style="color:${i}";>${n}</a>`:`<a href="javascript:;" class="target" index="${o.PId}" tid="${o.TaskOrderId}" time="${u.ProcessTime}" product="${o.Product}" process="${r.Process}" style="color:${i}">${n}</a>`:`${n}`;return`${n}<td class="bg-green">${c(s)}</td>
                                <td>${l(h,"black")}</td>`},""),h=o.Put,c=o.Target;i[u]=(i[u]>>0)+h;e[u]=(e[u]>>0)+c;const a=(n,i="white")=>h>0?t===0?`<a href="javascript: showPmcChildPlanModal(undefined, 0, ${o.TaskOrderId}, ${o.PId}, '${o.Product}', '${r.Process}', 5607)" style="color:${i}";>${n}</a>`:`<a href="javascript:;" class="allPut" index="0" time="undefined" product="${o.Product}" process="${r.Process}" style="color:${i}">${n}</a>`:`${n}`,v=(n,i="white")=>c>0?t===0?`<a href="javascript: showPmcChildPlanModal(undefined, 0, ${o.TaskOrderId}, ${o.PId}, '${o.Product}', '${r.Process}', 5608)" style="color:${i}";>${n}</a>`:`<a href="javascript:;" class="allTarget" index="0" time="undefined" product="${o.Product}" process="${r.Process}" style="color:${i}">${n}</a>`:`${n}`;return`${n}<tr>
                            <td style="width: 40px">${s+1}</td>
                            <td>${o.TaskOrder}</td>
                            <td>${o.Product}</td>
                            <td>${monthDay(o.DeliveryTime)}</td>
                            <td class="bg-yellow">${a(h)}</td>
                            <td>${v(c,"black")}</td>${l.repeat(f)}
                        </tr>`},""),v=(n,t)=>n.reduce((i,r,u)=>u!=0?i+`<td class="bg-green">${n[u]}</td><td>${t[u]}</td>`.repeat(f):i,`<td  style="width: 40px" class="bg-yellow">${n[u]}</td><td>${t[u]}</td>`),y=(n,t,i=true)=>n.Index>0&&t==0?`<a href="javascript: showPmcChildIndexModal('${n.ProcessTime}', ${n.PId}, '${r.Process}')" ${i?'style="color:white"':""}>${n.Index}</a>`:`${n.Index}`,p=(n,t)=>n.reduce((n,i)=>`${n}<td class="bg-green">${y(i,t)}</td><td>0</td>`,""),s=(n,t,i,u,f)=>{let e=[],o=[],s="",h="",y="";return u.length>0?(s=a(u,i,e,o),h=v(e,o),y=p(c(f,r.Id),i),l(n,t,s,h,y)):""};return t+=`<div class="form-group"><label class="control-label text-red"><strong>工序：${r.Process}</strong></label></div>`,t+=s("pre","当前排程",0,e(i.datas,r.Id),e(i.Indexes,r.Id)),t+s("later","安排后",1,e(n.Put,r.Id),e(n.Indexes,r.Id))},"");$(t).html(o).find("th,td").css("padding","4px").end().find("th,td").css("border","1px solid gray").end().find("th,td").css("width","auto");$("#pmcPreviewProcessBtn").html('<button class="btn btn-primary btn-sm">排产<\/button>').find("button").on("click",()=>{if(!_taskOrders.length)return layer.msg("请先设置待排程任务单各工序数量");showConfirm("排产",()=>{const t={TaskOrders:_taskOrders,Schedule:n.Schedule};myPromise(5605,t,!1,1,()=>{getNotArrangeTaskList(),getArrangeTaskList(),getPmcPreviewParams(!1)})})});$(`${t} .later`).find(".target, .put").off("click").on("click",function(){const t=$(this).attr("index"),n=$(this).attr("time"),i=$(this).attr("tid");showPmcChildPlanModal(n,0,0,0,$(this).attr("product"),$(this).attr("process"),$(this).hasClass("put")?5607:5608,r[i][n][t])});e=dataTableConfig(0);e.fixedHeaderColumn(!0,6,0);$(`${t} .pmcPreviewProcess`).DataTable(e)})}}function showPmcProcessPlanModal(n,t,i,r,u){$("#pmcProcessPlanCode").text(r);$("#pmcProcessPlanProcess").text(u);myPromise(5607,{time:n,productId:t,pId:i},!0).then(n=>{const t=n.datas,i=dataTableConfig(t);i.addColumns([{data:"TaskOrder",title:"任务单"},{data:"Put",title:"数量"},{data:null,title:"安排",render:n=>Object.values(n.Arranges).map(n=>"{0}:{1}次".format(n.Item1,n.Item2)).join()}]);i.initComplete=function(){if(this.find("tfoot").remove(),t.length){const n=`<tfoot>
                              <tr>
                                <th>总计</th>
                                <th></th>
                                <th>${t.reduce((n,t)=>n+t.Put,0)}</th>
                              </tr>
                           </tfoot>`;this.append(n).find("tfoot tr:last th").css("borderTop",0)}};$("#pmcProcessPlanList").DataTable(i);$("#showPmcProcessPlanModal").modal("show")})}function showTaskLevelModel(){getTaskLevelList();$("#showTaskLevelModel").modal("show")}function getTaskLevelList(){_pmcTaskLevelTrs=[];myPromise(5590).then(n=>{const t=dataTableConfig(n.datas,!0);t.addColumns([{data:"Level",title:"等级",render:tableSet.input.bind(null,"level")},{data:"Order",title:"顺序",render:tableSet.input.bind(null,"order")},{data:"Remark",title:"备注",render:tableSet.input.bind(null,"remark")}]);t.drawCallback=function(){initCheckboxAddEvent.call(this,_pmcTaskLevelTrs,(n,t)=>{n.find(".level").val(t.Level);n.find(".order").val(t.Order).on("input",function(){onInput(this,5,0)});n.find(".remark").val(t.Remark)})};$("#pmcTaskLevelList").DataTable(t)})}function getTaskLevelTrInfo(n,t){const i=n.find(".level").val().trim();if(isStrEmptyOrUndefined(i))return void layer.msg("等级不能为空");const r=n.find(".order").val().trim().trim();if(isStrEmptyOrUndefined(r))return void layer.msg("顺序不能为空");const u={Level:i,Order:r,Remark:n.find(".remark").val()};return t||(u.Id=n.find(".isEnable").val()>>0),u}function updateTaskLevel(){updateTableRow(_pmcTaskLevelTrs,getTaskLevelTrInfo,5591,getTaskLevelList)}function showAddTaskLevelModel(){const t={Level:"",Order:"",Remark:""},n=dataTableConfig([t]);n.addColumns([{data:"Level",title:"等级",render:tableSet.addInput.bind(null,"level","auto")},{data:"Order",title:"顺序",render:tableSet.addInput.bind(null,"order","auto")},{data:"Remark",title:"备注",render:tableSet.addInput.bind(null,"remark","100%")},{data:null,title:"删除",render:tableSet.delBtn}]);n.createdRow=n=>$(n).find(".order").off("input").on("input",function(){onInput(this,5,0)});$("#addTaskLevelList").DataTable(n);$("#addTaskLevelListBtn").off("click").on("click",()=>addDataTableTr("#addTaskLevelList",t));$("#showAddTaskLevelModel").modal("show")}function addTaskLevel(){addTableRow("#addTaskLevelList",getTaskLevelTrInfo,5592,()=>{$("#showAddTaskLevelModel").modal("hide"),getTaskLevelList()})}function delTaskLevel(){delTableRow(_pmcTaskLevelTrs,5593,getTaskLevelList)}function getFlowCardList(n,t=false,i=null,r=1,u=true,f=0){const s=$("#wsSelect").val()>>0;if(s!==0){let e=$("#sendCardSTime").val().trim();if(isStrEmptyOrUndefined(e))return layer.msg("请选择发卡开始时间");let o=$("#sendCardETime").val().trim();if(isStrEmptyOrUndefined(o))return layer.msg("请选择发卡结束时间");if(compareDate(e,o))return layer.msg("结束时间不能小于开始时间");e+=" 00:00:00";o+=" 23:59:59";const h=$("#flowCardTaskOrderSelect").val();if(isStrEmptyOrUndefined(h))return layer.msg("请选择任务单");const c=$("#flowCardPlanSelect").val();if(isStrEmptyOrUndefined(c))return layer.msg("请选择计划号");myPromise(5110,{wId:s,startTime:e,endTime:o,taskOrderId:h,productId:c,qId:f},r).then(n=>{_flowCardTrs=[];var t=n.datas;if(u)if(_deviceCategoryListTable==null){const n=dataTableConfig(t,!0);n.addColumns([{data:"CreateTime",title:"发卡时间"},{data:"FlowCard",title:"流程卡"},{data:"ProcessCode",title:"流程编号"},{data:"TaskOrder",title:"任务单"},{data:"Product",title:"计划号"},{data:"Batch",title:"预计工时"},{data:"Id",title:"流程详情",render:n=>`<button class="btn btn-info btn-sm" onclick="showProcessFlowCardIdModal(${n})">查看</button>`},{data:"Remark",title:"备注"}]);n.drawCallback=function(){initCheckboxAddEvent.call(this,_flowCardTrs)};_flowCardListTable=$("#flowCardList").DataTable(n)}else updateTable(_flowCardListTable,t);i&&i(t)},r)}}function showProcessFlowCardIdModal(n){myPromise(5150,{flowCardId:n},!0).then(n=>{const t=dataTableConfig(n.datas);t.addColumns([{data:"Process",title:"工序"},{data:"Processor",title:"加工人"},{data:"DeviceCode",title:"加工设备"},{data:null,title:"最后完成时间",render:tableSet.endFinishTime},{data:"Progress",title:"进度",render:tableSet.progress},{data:"Count",title:"加工次数"},{data:"Before",title:"加工前数量"},{data:"Left",title:"剩余数量"},{data:"Qualified",title:"合格数"},{data:"Unqualified",title:"不合格数"},{data:"Before",title:"产量"}]);$("#processFlowCardIdList").DataTable(t);$("#showProcessFlowCardIdModal").modal("show")})}function showProcessDetail(n){const t=$("#wsSelect").val()>>0;myPromise(5060,{wId:t,qId:n},0).then(n=>{const i=n.datas[0],r=i.Processes,t={};r.forEach(n=>{const i=n.ProcessCodeId;t[i]?t[i].push(n):t[i]=[n]});$("#processDetailCodeSelect").off("change").on("change",function(){const i=$(this).val(),n=dataTableConfig(t[i]);n.addColumns([{data:"Process",title:"流程"},{data:"ProcessRepeat",title:"可否返工",render:tableSet.isReworkText},{data:"ProcessNumber",title:"单台加工数量"},{data:null,title:"工艺数据",render:()=>'<button class="btn btn-info btn-sm look-btn">查看<\/button>'}]);n.createdRow=(n,t)=>$(n).find(".look-btn")[0].ProcessData=JSON.parse(t.ProcessData);$("#processDetailList").DataTable(n)});$("#processDetailCodeSelect").html(getPlanToProcessCodeOps(i)).trigger("change");$("#showProcessDetailModal").modal("show")})}function getPlanToProcessCodeOps(n){const t=n.ProcessCodes?n.ProcessCodes.split(","):[],i=n.ProcessCodeIds?n.ProcessCodeIds.split(","):[],r=i.map((n,i)=>({Id:n,ProcessCode:t[i]}));return setOptions(r,"ProcessCode")}function selectTaskOrder(n){const t=$("#addFlowCardProcessList");t.html()&&(t.DataTable().destroy().clear(),t.empty());$("#addFlowCardWorkNum").val("");$("#addFlowCardCardNum").val("");$("#addFlowCardTarget").text(n.Target);$("#addFlowCardLeft").text(n.Left);$("#addFlowCardDoing").text(n.Doing);$("#addFlowCardIssue").text(n.Issue);$("#addFlowCardPlan").text(n.Product);$("#addFlowCardTime").text(n.DeliveryTime.split(" ")[0]);$("#processCodeLookBtn").val(n.ProductId);const i=n.ProductId;myPromise(5060,{qId:i},0).then(n=>$("#addFlowCardProcessCodeSelect").html(getPlanToProcessCodeOps(n.datas[0])).trigger("change"))}function addFlowCardModel(){const n=$("#wsSelect").val()>>0,t=myPromise(5090,{wId:n},0),i=myPromise(5500,{wId:n},0);Promise.all([t,i]).then(n=>{const t=n[0].datas;$("#addFlowCardTaskOrderSelect").html(setOptions(t,"TaskOrder")).select2({matcher});$("#addFlowCardPersonSelect").html(setOptions(n[1].datas,"Name")).select2({matcher});selectTaskOrder(t[0])});$("#addFlowCardModel").modal("show")}function addFlowCardProcessCodeLook(){const n=$(this).val();showProcessDetail(n)}function addFlowCardPreview(){const e=$("#wsSelect").val()>>0;let n=$("#addFlowCardWorkNum").val()>>0;if(isStrEmptyOrUndefined(n))return layer.msg("请输入加工数量");const t=$("#addFlowCardCardNum").val()>>0;if(isStrEmptyOrUndefined(t))return layer.msg("请输入单卡数量");const u=$("#addFlowCardProcessCodeSelect").val();if(isStrEmptyOrUndefined(u))return layer.msg("请选择流程编号");const o=$("#addFlowCardProcessCodeSelect :selected").text(),i=$("#addFlowCardPersonSelect").val();if(isStrEmptyOrUndefined(i))return layer.msg("请选择加个人");const s=$("#addFlowCardPersonSelect").html(),f=[];do f.push({WorkshopId:e,FlowCard:"",Number:n>=t?t:n,ProcessCode:o,PersonId:i});while((n-=t)>0);const r=dataTableConfig(f);r.addColumns([{data:"FlowCard",title:"流程卡号"},{data:"Number",title:"加工数量",render:tableSet.addInput.bind(null,"number","auto")},{data:"ProcessCode",title:"流程编号",render:n=>`<span codeid="${u}">${n}</span>`},{data:"PersonId",title:"加工人",render:tableSet.addSelect.bind(null,s,"person")}]);r.createdRow=n=>$(n).find(".person").val(i);$("#addFlowCardProcessList").DataTable(r);_addFlowCardPreview=!0}function addFlowCard(){if(!_addFlowCardPreview)return layer.msg("请预览之后再生成");const i=$("#wsSelect").val()>>0;if(!$("#addFlowCardProcessList").html())return layer.msg("请预览之后再生成");const n=$("#addFlowCardTaskOrderSelect").val();if(isStrEmptyOrUndefined(n))return layer.msg("请选择任务单");const t=[],r=r=>{const u=r.find(".person").val();if(isStrEmptyOrUndefined(u))return layer.msg("请选择加工人");t.push(r.find(".person :selected").text());const f=r.find(".number").val().trim()>>0;if(isStrEmptyOrUndefined(f))return layer.msg("请输入加工数量");return{WorkshopId:i,TaskOrderId:n,ProcessCodeId:r.find("[codeid]").attr("codeid"),ProcessorId:u,Number:f,Remark:"string"}},u=$("#addFlowCardProcessList [codeid]:first").text();addTableRow("#addFlowCardProcessList",r,5112,n=>{const r=n.FlowCards.map((n,i)=>({FlowCard:n.FlowCard,Number:n.Number,ProcessCode:u,PersonId:t[i]})),i=dataTableConfig(r);i.addColumns([{data:"FlowCard",title:"流程卡号"},{data:"Number",title:"加工数量"},{data:"ProcessCode",title:"流程编号"},{data:"PersonId",title:"加工人"}]);$("#addFlowCardProcessList").DataTable(i);_addFlowCardPreview=!1})}function flowCardPrint(){const n=$("#addFlowCardProcessList");if(!(n.html()&&!n.find("input").length))return layer.msg("生成成功后才能打印");const t=Array.from(getDataTableRow("#addFlowCardProcessList")).reduce((n,t)=>`${n}${$(t).prop("outerHTML")}`,""),i=`<table border="1" style="width:100%;text-align:center;border-collapse:collapse">${"<thead><tr><th>序号<\/th><th>流程卡号<\/th><th>加工数量<\/th><th>流程编号<\/th><th>加工人<\/th><\/tr><\/thead>"}<tbody>${t}</tbody></table>`;printCode(i)}function delFlowCard(){delTableRow(_flowCardTrs,5113,getFlowCardList)}const tableSet=tableDefault();let _workshopTrs=null,_workshopListTable=null;let _deviceTrs=null,_deviceListTable=null;let _deviceCategoryTrs=null,_deviceCategoryListTable=null,_deviceCategoryModel=!1;let _deviceModelTrs=null,_deviceModelListTable=null,_deviceCategoryCache=null;let _personTrs=null,_personListTable=null;let _personGradeTrs=null,_personGradeListTrs=null;let _processCodeTrs=null,_processCodeListTable=null;let _processCodeCategoryTrs=null,_processCodeCategoryListTable=null;let _processTrs=null,_processListTable=null;let _planTrs=null,_planListTable=null;let _planProcessCodeInfo=null;let _capacityTrs=null,_capacityListTrs=null;let _capacityDetailList=null,_capacityDetailListType=-1,capacityId=-1,currentCategoryId=-1;let _workOrderTrs=null,_workOrderTable=null;let _taskOrderTrs=null,_taskOrderTable=null;let _capacityNeed=[],_capacityNeedCurrentTaskId=0,_capacityNeedCurrentPId=0;let _capacityTaskProcessListInit=!1,_capacityTaskDetailList=null,_capacityTaskDeviceTrs=null,_capacityTaskOperatorTrs=null;let _capacityTasks=null;let _notArrangeTaskListTable=null,_pmcChildAutoWait=!1;let _pmcPreviewParams={};let _isGetPmcPreviewParams=!1;let _arrangeTask=null,_arrangeTaskListTable=null;let _taskOrders=[];let _pmcTaskLevelTrs=null;let _flowCardTrs=null,_flowCardListTable=null;let _addFlowCardPreview=!1;